[ 18%] Built target libwarp
Consolidate compiler generated dependencies of target test
[ 27%] Building CXX object CMakeFiles/test.dir/Test/Terms.cpp.o
In file included from /root/workdir/Test/Terms.cpp:2:
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:72: error: no matching function for call to ‘merge_terms(Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >)’
  362 |                         using MergedPreviousType = decltype(merge_terms(
      |                                                             ~~~~~~~~~~~^
  363 |                                         std::declval<LeftPreviousType>(),
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  364 |                                         std::declval<RightPreviousType>()
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  365 |                                 ))::Type;
      |                                 ~                                       
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant>’
  289 |         constexpr const static auto merge_terms(
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant> [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant>’
/root/workdir/Include/Warp/Parsing/Terms.hpp:301:43: note: the expression ‘‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant> [with RightPreviousParameterType = void; RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}; LeftPreviousParameterType = void; LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, {"[0-9]+"}, {"Digits"}, ctpg::associativity::no_assoc>}]’ evaluated to ‘false’
  301 |         requires(decltype(left)::template can_flat_merge<
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  302 |                                         RightPreviousParameterType,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |                                         RightPrecedentParameterConstant
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  304 |                         >
      |                         ~                  
  305 |                 ) // Merging Right INTO Left "equal" case
      |                 ~                          
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
  323 |         constexpr const static auto merge_terms( // Merginer Right INTO Left "in-between" case
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with 

		LeftPreviousParameterType = Terms<
				Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 
				4, 
				TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; 
		auto LeftPrecedentParameterConstant = 5; 
		LeftTermParameterTypes = {
				TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>
			}; 
		RightPreviousParameterType = Terms<
				void, 
				2, 
				TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; 
		auto RightPrecedentParameterConstant = 3; 
		RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’


/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with 
		LeftTermParameterType = Warp::Parsing::Terms<
				Warp::Parsing::Terms<
						Warp::Parsing::Terms<
								void, 
								1, 
								Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> 
							>, 
						4, 
						Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 
						5, 
						Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> 
					>; 
		RightTermParameterType = 
				Warp::Parsing::Terms<
						Warp::Parsing::Terms<
								void, 
								2, 
								Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> 
							>, 
						3, 
						Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> 
					>]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
/root/workdir/Include/Warp/Parsing/Terms.hpp:319:57: note: the expression ‘RightPrecedentParameterConstant < LeftPrecedentParameterConstant [with LeftPrecedentParameterConstant = 1; RightPrecedentParameterConstant = 2]’ evaluated to ‘false’
  319 |                         RightPrecedentParameterConstant < LeftPrecedentParameterConstant
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
  389 |         constexpr const static auto merge_terms( // Merginer Right INTO Left "in-between" case
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
/root/workdir/Include/Warp/Parsing/Terms.hpp:387:50: note: the expression ‘RightPrecedentParameterConstant < LeftPrecedentParameterConstant [with LeftPrecedentParameterConstant = 1; RightPrecedentParameterConstant = 2]’ evaluated to ‘false’
  387 |         requires(RightPrecedentParameterConstant < LeftPrecedentParameterConstant
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:72: error: no matching function for call to ‘merge_terms(Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >)’
  362 |                         using MergedPreviousType = decltype(merge_terms(
      |                                                             ~~~~~~~~~~~^
  363 |                                         std::declval<LeftPreviousType>(),
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  364 |                                         std::declval<RightPreviousType>()
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  365 |                                 ))::Type;
      |                                 ~                                       
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant>’
  289 |         constexpr const static auto merge_terms(
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant> [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant>’
/root/workdir/Include/Warp/Parsing/Terms.hpp:301:43: note: the expression ‘‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant> [with RightPreviousParameterType = void; RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}; LeftPreviousParameterType = void; LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, {"[0-9]+"}, {"Digits"}, ctpg::associativity::no_assoc>}]’ evaluated to ‘false’
  301 |         requires(decltype(left)::template can_flat_merge<
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  302 |                                         RightPreviousParameterType,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |                                         RightPrecedentParameterConstant
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  304 |                         >
      |                         ~                  
  305 |                 ) // Merging Right INTO Left "equal" case
      |                 ~                          
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
  323 |         constexpr const static auto merge_terms( // Merginer Right INTO Left "in-between" case
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with 
		LeftPreviousParameterType = void; 
		auto LeftPrecedentParameterConstant = 1; 
		LeftTermParameterTypes = {
				Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>
			}; 
		RightPreviousParameterType = void; 
		auto RightPrecedentParameterConstant = 2; 
		RightTermParameterTypes = {
				Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>
			}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
/root/workdir/Include/Warp/Parsing/Terms.hpp:319:57: note: the expression ‘RightPrecedentParameterConstant < LeftPrecedentParameterConstant [with LeftPrecedentParameterConstant = 1; RightPrecedentParameterConstant = 2]’ evaluated to ‘false’
  319 |                         RightPrecedentParameterConstant < LeftPrecedentParameterConstant
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
  389 |         constexpr const static auto merge_terms( // Merginer Right INTO Left "in-between" case
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
/root/workdir/Include/Warp/Parsing/Terms.hpp:387:50: note: the expression ‘RightPrecedentParameterConstant < LeftPrecedentParameterConstant [with LeftPrecedentParameterConstant = 1; RightPrecedentParameterConstant = 2]’ evaluated to ‘false’
  387 |         requires(RightPrecedentParameterConstant < LeftPrecedentParameterConstant
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:72: error: no matching function for call to ‘merge_terms(Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >)’
  362 |                         using MergedPreviousType = decltype(merge_terms(
      |                                                             ~~~~~~~~~~~^
  363 |                                         std::declval<LeftPreviousType>(),
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  364 |                                         std::declval<RightPreviousType>()
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  365 |                                 ))::Type;
      |                                 ~                                       
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant>’
  289 |         constexpr const static auto merge_terms(
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant> [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:289:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes> constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) requires ‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant>’
/root/workdir/Include/Warp/Parsing/Terms.hpp:301:43: note: the expression ‘‘decltype_type’ not supported by pp_cxx_unqualified_id::can_flat_merge<RightPreviousParameterType, RightPrecedentParameterConstant> [with RightPreviousParameterType = void; RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}; LeftPreviousParameterType = void; LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, {"[0-9]+"}, {"Digits"}, ctpg::associativity::no_assoc>}]’ evaluated to ‘false’
  301 |         requires(decltype(left)::template can_flat_merge<
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  302 |                                         RightPreviousParameterType,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |                                         RightPrecedentParameterConstant
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  304 |                         >
      |                         ~                  
  305 |                 ) // Merging Right INTO Left "equal" case
      |                 ~                          
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
  323 |         constexpr const static auto merge_terms( // Merginer Right INTO Left "in-between" case
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:323:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && (RightPrecedentParameterConstant > (LeftPreviousParameterType::precedence) || (same_as<LeftPreviousParameterType, void>)) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
/root/workdir/Include/Warp/Parsing/Terms.hpp:319:57: note: the expression ‘RightPrecedentParameterConstant < LeftPrecedentParameterConstant [with LeftPrecedentParameterConstant = 1; RightPrecedentParameterConstant = 2]’ evaluated to ‘false’
  319 |                         RightPrecedentParameterConstant < LeftPrecedentParameterConstant
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note: candidate: ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
  389 |         constexpr const static auto merge_terms( // Merginer Right INTO Left "in-between" case
      |                                     ^~~~~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:37: note: constraints not satisfied
/root/workdir/Include/Warp/Parsing/Terms.hpp: In substitution of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = void; auto LeftPrecedentParameterConstant = 1; LeftTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = void; auto RightPrecedentParameterConstant = 2; RightTermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:362:51:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 4; LeftTermParameterTypes = {TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:406:50:   required from ‘constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>) [with LeftPreviousParameterType = Terms<Terms<void, 1, TreeTerm<MyTerms::Digits, RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, TreeTerm<MyTerms::Plus, CharTerm, '+', ctpg::associativity::no_assoc> >; auto LeftPrecedentParameterConstant = 5; LeftTermParameterTypes = {TreeTerm<MyTerms::Mumble, StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc>}; RightPreviousParameterType = Terms<void, 2, TreeTerm<MyTerms::Raise, CharTerm, '^', ctpg::associativity::no_assoc> >; auto RightPrecedentParameterConstant = 3; RightTermParameterTypes = {TreeTerm<MyTerms::LeftAngleBracket, CharTerm, '<', ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:428:41:   required by substitution of ‘template<class LeftTermParameterType, class RightTermParameterType> using MergeTerms = typename decltype (Warp::Parsing::merge_terms(declval<LeftTermParameterType>(), declval<RightTermParameterType>()))::Type [with LeftTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc> >, 4, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc> >, 5, Warp::Parsing::TreeTerm<MyTerms::Mumble, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<7>{"Mumble"}, ctpg::associativity::no_assoc> >; RightTermParameterType = Warp::Parsing::Terms<Warp::Parsing::Terms<void, 2, Warp::Parsing::TreeTerm<MyTerms::Raise, Warp::Parsing::CharTerm, '^', ctpg::associativity::no_assoc> >, 3, Warp::Parsing::TreeTerm<MyTerms::LeftAngleBracket, Warp::Parsing::CharTerm, '<', ctpg::associativity::no_assoc> >]’
/root/workdir/Test/Terms.cpp:425:5:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:389:30:   required by the constraints of ‘template<class LeftPreviousParameterType, auto LeftPrecedentParameterConstant, class ... LeftTermParameterTypes, class RightPreviousParameterType, auto RightPrecedentParameterConstant, class ... RightTermParameterTypes>  requires  RightPrecedentParameterConstant < LeftPrecedentParameterConstant && RightPrecedentParameterConstant < (LeftPreviousParameterType::precedence) constexpr const auto Warp::Parsing::merge_terms(Terms<LeftPreviousParameterType, LeftPrecedentParameterConstant, LeftTermParameterTypes ...>, Terms<RightPreviousParameterType, RightPrecedentParameterConstant, RightTermParameterTypes ...>)’
/root/workdir/Include/Warp/Parsing/Terms.hpp:387:50: note: the expression ‘RightPrecedentParameterConstant < LeftPrecedentParameterConstant [with LeftPrecedentParameterConstant = 1; RightPrecedentParameterConstant = 2]’ evaluated to ‘false’
  387 |         requires(RightPrecedentParameterConstant < LeftPrecedentParameterConstant
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Test/Terms.cpp: In member function ‘virtual void TEST_Terms_Merge_Test::testBody()’:
/root/workdir/Test/Terms.cpp:427:25: error: ‘T’ was not declared in this scope
  427 |                         T,
      |                         ^
/root/workdir/Test/Terms.cpp:426:28: error: template argument 1 is invalid
  426 |         static_assert(std::is_same_v<
      |                            ^~~~~~~~~~
  427 |                         T,
      |                         ~~  
  428 |                         MakeTerms<TERCIARY_TEST_TERMS>
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  429 |                                         ::AddOnePriority<TEST_TERMS>
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  430 |                                         ::AddOnePriority<QUANTERNARY_TEST_TERMS>
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  431 |                                         ::AddOnePriority<SENERY_TEST_TERMS>
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  432 |                                         ::AddOnePriority<SECONDARY_TEST_TERMS>
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  433 |                                         ::AddOnePriority<QUINARY_TEST_TERMS>
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  434 |                 >);
      |                 ~           
make[3]: *** [CMakeFiles/test.dir/build.make:160: CMakeFiles/test.dir/Test/Terms.cpp.o] Error 1
make[2]: *** [CMakeFiles/Makefile2:111: CMakeFiles/test.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:118: CMakeFiles/test.dir/rule] Error 2
make: *** [Makefile:137: test] Error 2
