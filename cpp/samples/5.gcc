[ 28%] Built target libwarp
Consolidate compiler generated dependencies of target test
[ 42%] Building CXX object CMakeFiles/test.dir/Test/Terms.cpp.o
In file included from /root/.conan/data/ctpg/1.3.7/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg/ctpg.hpp:11,
                 from /root/workdir/Include/Warp/Common.hpp:14,
                 from /root/workdir/Include/Warp/Utilities.hpp:1,
                 from /root/workdir/Include/Warp/Parsing/TermWrappers.hpp:1,
                 from /root/workdir/Test/Terms.cpp:1:
/usr/include/c++/12/optional: In instantiation of ‘class std::optional<std::nullopt_t>’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:134:33:   required from ‘static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = MyTerms::Plus; PreviousParameterType = Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >; auto PrecedenceParameterConstant = 0; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc>}]’
/root/workdir/Include/Warp/Parsing/Terms.hpp:142:46:   required from ‘constexpr const auto Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >, 0, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc> >::term<MyTerms::Plus>’
/root/workdir/Test/Terms.cpp:125:2:   required from here
/usr/include/c++/12/optional:717:22: error: static assertion failed
  717 |       static_assert(!is_same_v<remove_cv_t<_Tp>, nullopt_t>);
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/12/optional:717:22: note: ‘!(bool)std::is_same_v<std::nullopt_t, std::nullopt_t>’ evaluates to false
In file included from /root/workdir/Test/Terms.cpp:2:
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = MyTerms::Plus; PreviousParameterType = Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >; auto PrecedenceParameterConstant = 0; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:142:46:   required from ‘constexpr const auto Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >, 0, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc> >::term<MyTerms::Plus>’
/root/workdir/Test/Terms.cpp:125:2:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: error: no matching function for call to ‘Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >::get_term()’
  137 |                                 return PreviousType::get_term();
      |                                        ~~~~~~~~~~~~~~~~~~~~~~^~
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note: candidate: ‘template<auto TagParameterConstant> static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = TagParameterConstant; PreviousParameterType = void; auto PrecedenceParameterConstant = 1; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc>}]’
  128 |                 consteval static auto get_term()
      |                                       ^~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: note:   couldn’t deduce template parameter ‘TagParameterConstant’
  137 |                                 return PreviousType::get_term();
      |                                        ~~~~~~~~~~~~~~~~~~~~~~^~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = MyTerms::Goodbye; PreviousParameterType = Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >; auto PrecedenceParameterConstant = 0; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:142:46:   required from ‘constexpr const auto Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >, 0, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc> >::term<MyTerms::Goodbye>’
/root/workdir/Test/Terms.cpp:126:2:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: error: no matching function for call to ‘Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >::get_term()’
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note: candidate: ‘template<auto TagParameterConstant> static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = TagParameterConstant; PreviousParameterType = void; auto PrecedenceParameterConstant = 1; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc>}]’
  128 |                 consteval static auto get_term()
      |                                       ^~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: note:   couldn’t deduce template parameter ‘TagParameterConstant’
  137 |                                 return PreviousType::get_term();
      |                                        ~~~~~~~~~~~~~~~~~~~~~~^~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = MyTerms::Minus; PreviousParameterType = Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >; auto PrecedenceParameterConstant = 0; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:142:46:   required from ‘constexpr const auto Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >, 0, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc> >::term<MyTerms::Minus>’
/root/workdir/Test/Terms.cpp:127:2:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: error: no matching function for call to ‘Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >::get_term()’
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note: candidate: ‘template<auto TagParameterConstant> static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = TagParameterConstant; PreviousParameterType = void; auto PrecedenceParameterConstant = 1; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc>}]’
  128 |                 consteval static auto get_term()
      |                                       ^~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: note:   couldn’t deduce template parameter ‘TagParameterConstant’
  137 |                                 return PreviousType::get_term();
      |                                        ~~~~~~~~~~~~~~~~~~~~~~^~
/root/workdir/Include/Warp/Parsing/Terms.hpp: In instantiation of ‘static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = MyTerms::LowercaseLetters; PreviousParameterType = Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >; auto PrecedenceParameterConstant = 0; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc>}]’:
/root/workdir/Include/Warp/Parsing/Terms.hpp:142:46:   required from ‘constexpr const auto Warp::Parsing::Terms<Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >, 0, Warp::Parsing::TreeTerm<MyTerms::Digits, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[0-9]+"}, Warp::Utilities::FixedString<7>{"Digits"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '.', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Hello, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<6>{"Hello"}, ctpg::associativity::no_assoc> >::term<MyTerms::LowercaseLetters>’
/root/workdir/Test/Terms.cpp:128:2:   required from here
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: error: no matching function for call to ‘Warp::Parsing::Terms<void, 1, Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc> >::get_term()’
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note: candidate: ‘template<auto TagParameterConstant> static consteval auto Warp::Parsing::Terms<PreviousParameterType, PrecedenceParameterConstant, TermParameterTypes>::get_term() [with auto TagParameterConstant = TagParameterConstant; PreviousParameterType = void; auto PrecedenceParameterConstant = 1; TermParameterTypes = {Warp::Parsing::TreeTerm<MyTerms::Plus, Warp::Parsing::CharTerm, '+', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Goodbye, Warp::Parsing::StringTerm, Warp::Utilities::FixedString<8>{"Goodbye"}, ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::Dot, Warp::Parsing::CharTerm, '-', ctpg::associativity::no_assoc>, Warp::Parsing::TreeTerm<MyTerms::LowercaseLetters, Warp::Parsing::RegexTerm, Warp::Utilities::FixedString<7>{"[a-z]+"}, Warp::Utilities::FixedString<17>{"LowercaseLetters"}, ctpg::associativity::no_assoc>}]’
  128 |                 consteval static auto get_term()
      |                                       ^~~~~~~~
/root/workdir/Include/Warp/Parsing/Terms.hpp:128:39: note:   template argument deduction/substitution failed:
/root/workdir/Include/Warp/Parsing/Terms.hpp:137:62: note:   couldn’t deduce template parameter ‘TagParameterConstant’
  137 |                                 return PreviousType::get_term();
      |                                        ~~~~~~~~~~~~~~~~~~~~~~^~
make[3]: *** [CMakeFiles/test.dir/build.make:104: CMakeFiles/test.dir/Test/Terms.cpp.o] Error 1
make[2]: *** [CMakeFiles/Makefile2:111: CMakeFiles/test.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:118: CMakeFiles/test.dir/rule] Error 2
make: *** [Makefile:137: test] Error 2
