[ 50%] Building CXX object CMakeFiles/starter_compiler.dir/Source/Main.cpp.o
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_constructible<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3107:33:   required from ''
constexpr const bool std::is_copy_constructible_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:288:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:944:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  944 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:944:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_constructible<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3107:33:   required from ''
constexpr const bool std::is_copy_constructible_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:288:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:944:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:944:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_constructible<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3107:33:   required from ''
constexpr const bool std::is_copy_constructible_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:288:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:944:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:944:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_constructible<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3107:33:   required from ''
constexpr const bool std::is_copy_constructible_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:288:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:944:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:944:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_assignable<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3114:73:   required from ''
constexpr const bool std::is_copy_assignable_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:293:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1060:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1060 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1060:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_assignable<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3114:73:   required from ''
constexpr const bool std::is_copy_assignable_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:293:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1060:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1060:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_assignable<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3114:73:   required from ''
constexpr const bool std::is_copy_assignable_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:293:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1060:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1060:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_copy_assignable<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3114:73:   required from ''
constexpr const bool std::is_copy_assignable_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:293:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_copy_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1060:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1060:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_constructible<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3110:33:   required from ''
constexpr const bool std::is_move_constructible_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:290:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:965:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  965 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:965:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_constructible<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3110:33:   required from ''
constexpr const bool std::is_move_constructible_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:290:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:965:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:965:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_constructible<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3110:33:   required from ''
constexpr const bool std::is_move_constructible_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:290:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:965:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:965:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_constructible<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3110:33:   required from ''
constexpr const bool std::is_move_constructible_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:290:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_ctor
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:965:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:965:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_assignable<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3116:73:   required from ''
constexpr const bool std::is_move_assignable_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:296:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1081:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1081 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1081:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_assignable<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3116:73:   required from ''
constexpr const bool std::is_move_assignable_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:296:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1081:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1081:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_assignable<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3116:73:   required from ''
constexpr const bool std::is_move_assignable_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:296:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1081:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1081:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_move_assignable<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3116:73:   required from ''
constexpr const bool std::is_move_assignable_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:296:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_move_assign
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1081:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1081:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_destructible<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3142:37:   required from ''
constexpr const bool std::is_trivially_destructible_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1289:37: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1289 |                     __bool_constant<__has_trivial_destructor(_Tp)>>
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits:1291:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1291 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1291:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_destructible_v<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3142:37: error: ''
value ' is not a member of ' std::is_trivially_destructible<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
 3142 |     is_trivially_destructible<_Tp>::value;
      |                                     ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_destructible<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3142:37:   required from ''
constexpr const bool std::is_trivially_destructible_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1289:37: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1289 |                     __bool_constant<__has_trivial_destructor(_Tp)>>
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits:1291:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1291 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1291:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_destructible_v<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3142:37: error: ''
value ' is not a member of ' std::is_trivially_destructible<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
 3142 |     is_trivially_destructible<_Tp>::value;
      |                                     ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_destructible<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3142:37:   required from ''
constexpr const bool std::is_trivially_destructible_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1289:37: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1289 |                     __bool_constant<__has_trivial_destructor(_Tp)>>
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits:1291:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1291 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1291:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_destructible_v<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3142:37: error: ''
value ' is not a member of ' std::is_trivially_destructible<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
 3142 |     is_trivially_destructible<_Tp>::value;
      |                                     ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_destructible<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3142:37:   required from ''
constexpr const bool std::is_trivially_destructible_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1289:37: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1289 |                     __bool_constant<__has_trivial_destructor(_Tp)>>
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits:1291:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1291 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1291:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_destructible_v<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:299:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_dtor
/usr/include/c++/11/variant:308:4:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3142:37: error: ''
value ' is not a member of ' std::is_trivially_destructible<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
 3142 |     is_trivially_destructible<_Tp>::value;
      |                                     ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>, true>':
/usr/include/c++/11/type_traits:1227:12:   required from ''
struct std::is_trivially_move_constructible<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1222:25: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1222 |                         __is_trivially_constructible(_Tp, _Tp&&)>>
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1230:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1230 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1230:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3130:43: error: ''
value ' is not a member of ' std::is_trivially_move_constructible<
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
 3130 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>, true>':
/usr/include/c++/11/type_traits:1227:12:   required from ''
struct std::is_trivially_move_constructible<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1222:25: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1222 |                         __is_trivially_constructible(_Tp, _Tp&&)>>
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1230:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1230 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1230:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3130:43: error: ''
value ' is not a member of ' std::is_trivially_move_constructible<
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
 3130 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>, true>':
/usr/include/c++/11/type_traits:1227:12:   required from ''
struct std::is_trivially_move_constructible<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1222:25: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1222 |                         __is_trivially_constructible(_Tp, _Tp&&)>>
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1230:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1230 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1230:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3130:43: error: ''
value ' is not a member of ' std::is_trivially_move_constructible<
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
 3130 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>, true>':
/usr/include/c++/11/type_traits:1227:12:   required from ''
struct std::is_trivially_move_constructible<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1222:25: error: invalid use of incomplete type ''
struct ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
 1222 |                         __is_trivially_constructible(_Tp, _Tp&&)>>
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:132:8: note: declaration of ''
struct ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>
  132 | struct ExpressionNode
      |        ^~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3130:43:   required from ''
constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1230:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1230 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1230:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/variant:303:5:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_ctor
/usr/include/c++/11/variant:308:23:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:3130:43: error: ''
value ' is not a member of ' std::is_trivially_move_constructible<
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
 3130 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_assignable<ExpressionNode<ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3139:40:   required from ''
constexpr const bool std::is_trivially_move_assignable_v<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:309:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1281:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1281 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/type_traits:1281:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_assignable<ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3139:40:   required from ''
constexpr const bool std::is_trivially_move_assignable_v<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:309:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1281:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1281:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_assignable<ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3139:40:   required from ''
constexpr const bool std::is_trivially_move_assignable_v<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:309:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1281:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1281:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
/usr/include/c++/11/type_traits: In instantiation of 'struct std::is_trivially_move_assignable<ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem, ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract> >':
/usr/include/c++/11/type_traits:3139:40:   required from ''
constexpr const bool std::is_trivially_move_assignable_v<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:309:8:   required from ''
constexpr const bool std::__detail::__variant::_Traits<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>::_S_trivial_move_assign
/usr/include/c++/11/variant:688:11:   required by substitution of ''
template <class... _Types>
using _Move_assign_alias = std::__detail::__variant::_Move_assign_base<
    std::__detail::__variant::_Traits<_Types>::_S_trivial_move_assign,
    _Types...>[with _Types = {ExpressionNode<OtherNodeType::FactorStem,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorMultiply,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::FactorDivide,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumAdd,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>,
                              ExpressionNode<ExpressionOperator::SumSubtract,
                                             OtherNodeType::FactorStem,
                                             ExpressionOperator::FactorMultiply,
                                             ExpressionOperator::FactorDivide,
                                             ExpressionOperator::SumAdd,
                                             ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:692:12:   required from ''
struct std::__detail::__variant::_Variant_base<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1297:11:   required from ''
class std::variant<
    ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<
        ExpressionOperator::FactorMultiply, OtherNodeType::FactorStem,
        ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
        ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::FactorDivide, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumAdd, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>,
    ExpressionNode<ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
                   ExpressionOperator::FactorMultiply,
                   ExpressionOperator::FactorDivide, ExpressionOperator::SumAdd,
                   ExpressionOperator::SumSubtract>>
/root/workdir/Source/Main.cpp:204:23:   required from here
/usr/include/c++/11/type_traits:1281:52: error: static assertion failed: template argument must be a complete class or an unbounded array
/usr/include/c++/11/type_traits:1281:52: note: ''
std::__is_complete_or_unbounded<std::__type_identity<ExpressionNode<
    ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
    ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
    ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>>(
    (std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>{},
     std::__type_identity<ExpressionNode<
         ExpressionOperator::SumSubtract, OtherNodeType::FactorStem,
         ExpressionOperator::FactorMultiply, ExpressionOperator::FactorDivide,
         ExpressionOperator::SumAdd, ExpressionOperator::SumSubtract>>()))' evaluates to fals
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr const _Tp& std::get(const std::variant<_Types ...>&) [with _Tp = long unsigned int; _Types = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}]':
/root/workdir/Source/Main.cpp:349:58:   required from here
/usr/include/c++/11/variant:1110:42: error: static assertion failed: T must occur exactly once in alternatives
 1110 |       static_assert(__detail::__variant::__exactly_once<_Tp, _Types...>,
      |                     ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1110:42: note: ''
std::__detail::__variant::__exactly_once<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>' evaluates to fals
/usr/include/c++/11/variant: In instantiation of 'struct std::variant_alternative<1, std::variant<ExpressionNode<ExpressionOperator::SumSubtract> > >':
/usr/include/c++/11/variant:103:12:   recursively required from ''
struct std::variant_alternative<
    4, std::variant<ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>
/usr/include/c++/11/variant:103:12:   required from ''
struct std::variant_alternative<
    5, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>
/usr/include/c++/11/variant:111:11:   required by substitution of ''
template <long unsigned int _Np, class _Variant>
using variant_alternative_t = typename std::variant_alternative::type
    [with long unsigned int _Np = 5;
     _Variant = std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/usr/include/c++/11/variant:1697:5:   required by substitution of ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &&
std::get(const std::variant<_Types...>
             &&)[with long unsigned int _Np = 5;
                 _Types = {ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:1113:73:   required from ''
constexpr const _Tp &
std::get(const std::variant<_Types...>
             &)[with _Tp = long unsigned int;
                _Types = {ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>}]
/root/workdir/Source/Main.cpp:349:58:   required from here
/usr/include/c++/11/variant:103:12: error: invalid use of incomplete type ''
struct std::variant_alternative<0, std::variant<>>
  103 |     struct variant_alternative<_Np, variant<_First, _Rest...>>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:100:12: note: declaration of ''
struct std::variant_alternative<0, std::variant<>>
  100 |     struct variant_alternative;
      |            ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant: In instantiation of 'constexpr const _Tp& std::get(const std::variant<_Types ...>&) [with _Tp = long unsigned int; _Types = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}]':
/root/workdir/Source/Main.cpp:349:58:   required from here
/usr/include/c++/11/variant:1113:73: error: no matching function for call to ''
get<std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>>(
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:223:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr typename std::tuple_element<_Int, std::pair<_OIter1, _OIter2>>::type &
std::get(std::pair<_OIter1, _OIter2> &)
  223 |     get(pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:223:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: note:   types ''
std::pair<_OIter1, _OIter2> ' and ' const std::variant<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>' have incompatible cv-qualifier
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:228:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr
    typename std::tuple_element<_Int, std::pair<_OIter1, _OIter2>>::type &&
    std::get(std::pair<_OIter1, _OIter2> &&)
  228 |     get(pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:228:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: note:   types ''
std::pair<_OIter1, _OIter2> ' and ' const std::variant<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>' have incompatible cv-qualifier
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:233:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr const typename std::tuple_element<_Int,
                                            std::pair<_OIter1, _OIter2>>::type &
std::get(const std::pair<_OIter1, _OIter2> &)
  233 |     get(const pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:233:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: note:   ''
const std::variant<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<
        ExpressionOperator::SumSubtract>> ' is not derived from ' const std::
    pair<_OIter1, _OIter2>
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:238:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr const typename std::tuple_element<
    _Int, std::pair<_OIter1, _OIter2>>::type &&
std::get(const std::pair<_OIter1, _OIter2> &&)
  238 |     get(const pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:238:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: note:   ''
const std::variant<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<
        ExpressionOperator::SumSubtract>> ' is not derived from ' const std::
    pair<_OIter1, _OIter2>
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:247:5: note: candidate: ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_T1, _T2> &)
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:247:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_T1, _T2> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:252:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_T1, _T2> &)
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:252:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_T1, _T2> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:257:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_T1, _T2> &&)
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:257:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_T1, _T2> &&)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:262:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_T1, _T2> &&)
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:262:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_T1, _T2> &&)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:267:5: note: candidate: ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_Up, _Tp> &)
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:267:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_Up, _Tp> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:272:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_Up, _Tp> &)
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:272:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_Up, _Tp> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:277:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_Up, _Tp> &&)
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:277:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_Up, _Tp> &&)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /usr/include/c++/11/variant:37,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/utility:282:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_Up, _Tp> &&)
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_Up, _Tp> &&)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1664:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &
std::get(std::variant<_Types...> &)
 1664 |     get(variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1664:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1113:73: note:   types ''
std::variant<_Types...> ' and ' const std::variant<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>' have incompatible cv-qualifier
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1675:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &&
std::get(std::variant<_Types...> &&)
 1675 |     get(variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1675:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1113:73: note:   types ''
std::variant<_Types...> ' and ' const std::variant<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>' have incompatible cv-qualifier
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1686:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &
std::get(const std::variant<_Types...> &)
 1686 |     get(const variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1686:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant: In substitution of 'template<long unsigned int _Np, class _Variant> using variant_alternative_t = typename std::variant_alternative::type [with long unsigned int _Np = 5; _Variant = std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/usr/include/c++/11/variant:1686:5:   required by substitution of ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &
std::get(const std::variant<_Types...>
             &)[with long unsigned int _Np = 5;
                _Types = {ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>}]
/usr/include/c++/11/variant:1113:73:   required from ''
constexpr const _Tp &
std::get(const std::variant<_Types...>
             &)[with _Tp = long unsigned int;
                _Types = {ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>}]
/root/workdir/Source/Main.cpp:349:58:   required from here
/usr/include/c++/11/variant:111:11: error: no type named ''
type ' in ' struct std::variant_alternative<
    5, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>
  111 |     using variant_alternative_t =
      |           ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant: In instantiation of 'constexpr const _Tp& std::get(const std::variant<_Types ...>&) [with _Tp = long unsigned int; _Types = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}]':
/root/workdir/Source/Main.cpp:349:58:   required from here
/usr/include/c++/11/variant:1697:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &&
std::get(const std::variant<_Types...> &&)
 1697 |     get(const variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1697:5: note:   substitution of deduced template arguments resulted in errors seen above
/usr/include/c++/11/variant:1089:20: note: candidate: ''
template <class _Tp, class... _Types>
constexpr _Tp &std::get(std::variant<_Types...> &)
 1089 |     constexpr _Tp& get(variant<_Types...>& __v)
      |                    ^~~
/usr/include/c++/11/variant:1089:20: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr _Tp &std::get(std::variant<_Types...> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1098:21: note: candidate: ''
template <class _Tp, class... _Types>
constexpr _Tp &&std::get(std::variant<_Types...> &&)
 1098 |     constexpr _Tp&& get(variant<_Types...>&& __v)
      |                     ^~~
/usr/include/c++/11/variant:1098:21: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr _Tp &&std::get(std::variant<_Types...> &&)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
/usr/include/c++/11/variant:1108:26: note: candidate: ''
template <class _Tp, class... _Types>
constexpr const _Tp &std::get(const std::variant<_Types...> &)
 1108 |     constexpr const _Tp& get(const variant<_Types...>& __v)
      |                          ^~~
/usr/include/c++/11/variant:1108:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1113:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr const _Tp &std::get(const std::variant<_Types...> &)
 1113 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/11/variant:1113:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    long unsigned int, ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>
In file included from /root/workdir/Source/Main.cpp:6:
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp: In instantiation of 'static constexpr LValueType ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types ...>, std::tuple<_Rest ...>, std::tuple<Rules ...>, LexerUsage>::reduce_value_impl(const F&, ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types ...>, std::tuple<_Rest ...>, std::tuple<Rules ...>, LexerUsage>::value_variant_type*, std::index_sequence<I ...>) [with F = <lambda(auto:66)>; LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; RValueType = {ctpg::term_value<std::basic_string_view<char, std::char_traits<char> > >}; long unsigned int ...I = {0}; RootValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::regex_term<natural_number_regex>, ctpg::char_term, ctpg::char_term}; NTerms = {ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >}; Rules = {ctpg::detail::rule<<lambda(auto:66)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::regex_term<natural_number_regex> >, ctpg::detail::rule<<lambda(auto:67, auto:68, const auto:69&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::regex_term<natural_number_regex> >, ctpg::detail::rule<<lambda(auto:70, auto:71, const auto:72&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::regex_term<natural_number_regex> >, ctpg::detail::rule<<lambda(auto:73, auto:74, auto:75)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term>, ctpg::detail::rule<<lambda(auto:76)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:77, auto:78, auto:79)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:80, auto:81, auto:82)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:83)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:84, auto:85, const auto:86&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:87, auto:88, const auto:89&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >}; LexerUsage = ctpg::use_generated_lexer; ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types ...>, std::tuple<_Rest ...>, std::tuple<Rules ...>, LexerUsage>::value_variant_type = std::variant<std::nullptr_t, ctpg::no_type, WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >, ctpg::term_value<char>, ctpg::term_value<std::basic_string_view<char, std::char_traits<char> > > >; std::index_sequence<I ...> = std::integer_sequence<long unsigned int, 0>]':
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 0; F = <lambda(auto : 66)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 0; F = <lambda(auto : 66)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::regex_term<natural_number_regex>}; long unsigned int... I = {0};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:20: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(
        ExpressionNode<OtherNodeType::FactorStem, OtherNodeType::FactorStem>)
 2503 |             return LValueType(f(std::get<RValueType>(std::move(*(start + I)))...));
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
ExpressionNode<
    OtherNodeType::FactorStem,
    OtherNodeType::
        FactorStem> ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                                      ExpressionNode<
                                          ExpressionOperator::FactorMultiply>,
                                      ExpressionNode<
                                          ExpressionOperator::FactorDivide>,
                                      ExpressionNode<
                                          ExpressionOperator::SumAdd>,
                                      ExpressionNode<
                                          ExpressionOperator::SumSubtract>>::
        ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
ExpressionNode<OtherNodeType::FactorStem,
               OtherNodeType::FactorStem> ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
ExpressionNode<
    OtherNodeType::FactorStem,
    OtherNodeType::
        FactorStem> ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                                      ExpressionNode<
                                          ExpressionOperator::FactorMultiply>,
                                      ExpressionNode<
                                          ExpressionOperator::FactorDivide>,
                                      ExpressionNode<
                                          ExpressionOperator::SumAdd>,
                                      ExpressionNode<
                                          ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
In file included from /root/workdir/Source/Main.cpp:6:
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp: In instantiation of 'constexpr std::optional<_Tp> ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types ...>, std::tuple<_Rest ...>, std::tuple<Rules ...>, LexerUsage>::parse(ctpg::parse_options, const Buffer&, ErrorStream&) const [with Buffer = ctpg::buffers::string_buffer; ErrorStream = std::basic_ostream<char>; RootValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::regex_term<natural_number_regex>, ctpg::char_term, ctpg::char_term}; NTerms = {ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >}; Rules = {ctpg::detail::rule<<lambda(auto:66)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::regex_term<natural_number_regex> >, ctpg::detail::rule<<lambda(auto:67, auto:68, const auto:69&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::regex_term<natural_number_regex> >, ctpg::detail::rule<<lambda(auto:70, auto:71, const auto:72&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::regex_term<natural_number_regex> >, ctpg::detail::rule<<lambda(auto:73, auto:74, auto:75)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term>, ctpg::detail::rule<<lambda(auto:76)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:77, auto:78, auto:79)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:80, auto:81, auto:82)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:83)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:84, auto:85, const auto:86&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >, ctpg::detail::rule<<lambda(auto:87, auto:88, const auto:89&)>, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >, ctpg::char_term, ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > > >}; LexerUsage = ctpg::use_generated_lexer]':
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:1797:21:   required from ''
constexpr std::optional<_Tp>
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::parse(const Buffer &, ErrorStream &) const
    [with Buffer = ctpg::buffers::string_buffer;
     ErrorStream = std::basic_ostream<char>;
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer]
/root/workdir/Source/Main.cpp:343:52:   required from here
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:1864:28: error: use of deleted function ''
std::optional<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> &
std::optional<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>::
operator=(
    std::optional<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>>
        &&)
 1864 |                 root_value = std::optional(std::move(success(ps)));
      |                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:11,
                 from /root/workdir/Source/Main.cpp:6:
/usr/include/c++/11/optional:663:11: note: ''
std::optional<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> &
std::optional<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>::
operator=(
    std::optional<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>>
        &&)' is implicitly deleted because the default definition would be ill-formed
  663 |     class optional
      |           ^~~~~~~~
/usr/include/c++/11/optional:663:11: error: use of deleted function ''
std::_Enable_copy_move<true, false, true, false, _Tag> &
std::_Enable_copy_move<true, false, true, false, _Tag>::operator=(
    std::_Enable_copy_move<true, false, true, false, _Tag>
        &&)[with _Tag = std::optional<
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>>]
In file included from /usr/include/c++/11/variant:38,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/enable_special_members.h:248:5: note: declared here
  248 |     operator=(_Enable_copy_move&&) noexcept                         = delete;
      |     ^~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<long unsigned int>(long unsigned int)::<lambda(auto:54)> [with auto:54 = ExpressionNode<OtherNodeType::FactorStem>]':
/usr/include/c++/11/type_traits:2466:26:   required by substitution of ''
template <class _Fn, class... _Args>
static std::__result_of_success<decltype(declval<_Fn>()((declval<_Args>)()...)),
                                std::__invoke_other>
std::__result_of_other_impl::_S_test(
    int)[with _Fn = WeakFactor<
             ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
         <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
         _Args = {const ExpressionNode<OtherNodeType::FactorStem> & }]
/usr/include/c++/11/type_traits:2477:55:   required from ''
struct std::__result_of_impl<
    false, false,
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2482:12:   required from ''
struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2921:12:   required from ''
struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2933:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)
        [with auto:49 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:113:73: error: no match for ''
operator* ' (operand types are ' ExpressionNode<
    OtherNodeType::FactorStem> ' and ' const long unsigned int'
  113 |         return ThisType{ std::visit( [ & ]( auto value ) { return value * other; }, factor ) };
      |                                                                   ~~~~~~^~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In substitution of 'template<class _Fn, class ... _Args> using invoke_result_t = typename std::invoke_result::type [with _Fn = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<long unsigned int>(long unsigned int)::<lambda(auto:54)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1745:13:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)
        [with auto:49 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/type_traits:2933:11: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 2933 |     using invoke_result_t = typename invoke_result<_Fn, _Args...>::type;
      |           ^~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<long unsigned int>(long unsigned int)::<lambda(auto:54)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)
        [with auto:49 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1748:13: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 1748 |       using _Tag = __detail::__variant::__deduce_visit_result<_Result_type>;
      |             ^~~~
/usr/include/c++/11/variant: In instantiation of 'decltype(auto) std::__check_visitor_result(_Visitor&&, _Variant&&) [with long unsigned int _Idx = 0; _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<long unsigned int>(long unsigned int)::<lambda(auto:54)>; _Variant = const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&]':
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)
        [with auto:49 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1725:27: error: no matching function for call to ''
__invoke(
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    std::variant_alternative_t<
        0, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>> &)
 1725 |       return std::__invoke(std::forward<_Visitor>(__vis),
      |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1726 |                            std::get<_Idx>(std::forward<_Variant>(__variant)));
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/variant:42,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/invoke.h:90:5: note: candidate: ''
template <class _Callable, class... _Args>
constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type
std::__invoke(_Callable &&, _Args &&...)
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/11/bits/invoke.h:90:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/invoke.h: In substitution of 'template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<long unsigned int>(long unsigned int)::<lambda(auto:54)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1725:27:   required from ''
decltype(auto) std::__check_visitor_result(_Visitor &&, _Variant &&)
    [with long unsigned int _Idx = 0;
     _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &
]
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <long unsigned int>(long unsigned int)::<lambda(auto : 54)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)
        [with auto:49 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/bits/invoke.h:90:5: error: no type named ''
type ' in ' struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<long unsigned int>(long unsigned int)::<lambda(auto:54)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)
        [with auto:49 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1753:53:   in 'constexpr' expansion of ''
std::__check_visitor_results<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <long unsigned int>(long unsigned int)::<lambda(auto : 54)>,
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &,
    0, 1, 2, 3, 4>((std::make_index_sequence<5>(),
                    std::make_index_sequence<5>()))
/usr/include/c++/11/variant:1752:26: error: ''
constexpr' call flows off the end of the functio
 1752 |           constexpr bool __visit_rettypes_match =
      |                          ^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1758:29: error: non-constant condition for static assertion
 1758 |               static_assert(__visit_rettypes_match,
      |                             ^~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'constexpr WeakFactor<ArithmaticParameterTypes>::ThisType WeakFactor<ArithmaticParameterTypes>::operator*(auto:49) [with auto:49 = long unsigned int; ArithmaticParameterTypes = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}; WeakFactor<ArithmaticParameterTypes>::ThisType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/root/workdir/Source/Main.cpp:308:55:   required from ''
<lambda(auto:67, auto:68, const auto:69&)> [with auto:67 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:68 = ctpg::term_value<char>; auto:69 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 1;
     F = <lambda(auto : 67, auto : 68, const auto : 69 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:113:94: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(<brace - enclosed initializer list>)
  113 |         return ThisType{ std::visit( [ & ]( auto value ) { return value * other; }, factor ) };
      |                                                                                              ^
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>::ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
void ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
/root/workdir/Source/Main.cpp: In instantiation of 'WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<long unsigned int>(long unsigned int)::<lambda(auto:55)> [with auto:55 = ExpressionNode<OtherNodeType::FactorStem>]':
/usr/include/c++/11/type_traits:2466:26:   required by substitution of ''
template <class _Fn, class... _Args>
static std::__result_of_success<decltype(declval<_Fn>()((declval<_Args>)()...)),
                                std::__invoke_other>
std::__result_of_other_impl::_S_test(
    int)[with _Fn = WeakFactor<
             ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
         <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
         _Args = {const ExpressionNode<OtherNodeType::FactorStem> & }]
/usr/include/c++/11/type_traits:2477:55:   required from ''
struct std::__result_of_impl<
    false, false,
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2482:12:   required from ''
struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2921:12:   required from ''
struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2933:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)
        [with auto:50 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:116:73: error: no match for ''
operator/ ' (operand types are ' ExpressionNode<
    OtherNodeType::FactorStem> ' and ' const long unsigned int'
  116 |         return ThisType{ std::visit( [ & ]( auto value ) { return value / other; }, factor ) };
      |                                                                   ~~~~~~^~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In substitution of 'template<class _Fn, class ... _Args> using invoke_result_t = typename std::invoke_result::type [with _Fn = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<long unsigned int>(long unsigned int)::<lambda(auto:55)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1745:13:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)
        [with auto:50 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/type_traits:2933:11: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 2933 |     using invoke_result_t = typename invoke_result<_Fn, _Args...>::type;
      |           ^~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<long unsigned int>(long unsigned int)::<lambda(auto:55)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)
        [with auto:50 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1748:13: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 1748 |       using _Tag = __detail::__variant::__deduce_visit_result<_Result_type>;
      |             ^~~~
/usr/include/c++/11/variant: In instantiation of 'decltype(auto) std::__check_visitor_result(_Visitor&&, _Variant&&) [with long unsigned int _Idx = 0; _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<long unsigned int>(long unsigned int)::<lambda(auto:55)>; _Variant = const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&]':
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)
        [with auto:50 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1725:27: error: no matching function for call to ''
__invoke(
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    std::variant_alternative_t<
        0, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>> &)
 1725 |       return std::__invoke(std::forward<_Visitor>(__vis),
      |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1726 |                            std::get<_Idx>(std::forward<_Variant>(__variant)));
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/variant:42,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/invoke.h:90:5: note: candidate: ''
template <class _Callable, class... _Args>
constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type
std::__invoke(_Callable &&, _Args &&...)
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/11/bits/invoke.h:90:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/invoke.h: In substitution of 'template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<long unsigned int>(long unsigned int)::<lambda(auto:55)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1725:27:   required from ''
decltype(auto) std::__check_visitor_result(_Visitor &&, _Variant &&)
    [with long unsigned int _Idx = 0;
     _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &
]
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <long unsigned int>(long unsigned int)::<lambda(auto : 55)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)
        [with auto:50 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/bits/invoke.h:90:5: error: no type named ''
type ' in ' struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<long unsigned int>(long unsigned int)::<lambda(auto:55)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)
        [with auto:50 = long unsigned int;
              ArithmaticParameterTypes =
                  {ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>};
              WeakFactor<ArithmaticParameterTypes>::ThisType =
                  WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1753:53:   in 'constexpr' expansion of ''
std::__check_visitor_results<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <long unsigned int>(long unsigned int)::<lambda(auto : 55)>,
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &,
    0, 1, 2, 3, 4>((std::make_index_sequence<5>(),
                    std::make_index_sequence<5>()))
/usr/include/c++/11/variant:1752:26: error: ''
constexpr' call flows off the end of the functio
 1752 |           constexpr bool __visit_rettypes_match =
      |                          ^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1758:29: error: non-constant condition for static assertion
 1758 |               static_assert(__visit_rettypes_match,
      |                             ^~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'constexpr WeakFactor<ArithmaticParameterTypes>::ThisType WeakFactor<ArithmaticParameterTypes>::operator/(auto:50) [with auto:50 = long unsigned int; ArithmaticParameterTypes = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}; WeakFactor<ArithmaticParameterTypes>::ThisType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/root/workdir/Source/Main.cpp:312:55:   required from ''
<lambda(auto:70, auto:71, const auto:72&)> [with auto:70 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:71 = ctpg::term_value<char>; auto:72 = ctpg::term_value<std::basic_string_view<char> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          ctpg::term_value<
              std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 2;
     F = <lambda(auto : 70, auto : 71, const auto : 72 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term, ctpg::regex_term<natural_number_regex>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:116:94: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(<brace - enclosed initializer list>)
  116 |         return ThisType{ std::visit( [ & ]( auto value ) { return value / other; }, factor ) };
      |                                                                                              ^
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>::ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
void ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
/root/workdir/Source/Main.cpp: In instantiation of 'WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:54)> [with auto:54 = ExpressionNode<OtherNodeType::FactorStem>]':
/usr/include/c++/11/type_traits:2466:26:   required by substitution of ''
template <class _Fn, class... _Args>
static std::__result_of_success<decltype(declval<_Fn>()((declval<_Args>)()...)),
                                std::__invoke_other>
std::__result_of_other_impl::_S_test(
    int)[with _Fn = WeakFactor<
             ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
         <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>>(
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>)::
             <lambda(auto : 54)>;
         _Args = {const ExpressionNode<OtherNodeType::FactorStem> & }]
/usr/include/c++/11/type_traits:2477:55:   required from ''
struct std::__result_of_impl<
    false, false,
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2482:12:   required from ''
struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2921:12:   required from ''
struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2933:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)[with
        auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:113:73: error: no match for ''
operator* ' (operand types are ' ExpressionNode<
    OtherNodeType::
        FactorStem> ' and ' const WeakFactor<ExpressionNode<OtherNodeType::
                                                                FactorStem>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorMultiply>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorDivide>,
                                             ExpressionNode<
                                                 ExpressionOperator::SumAdd>,
                                             ExpressionNode<ExpressionOperator::
                                                                SumSubtract>>'
  113 |         return ThisType{ std::visit( [ & ]( auto value ) { return value * other; }, factor ) };
      |                                                                   ~~~~~~^~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In substitution of 'template<class _Fn, class ... _Args> using invoke_result_t = typename std::invoke_result::type [with _Fn = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:54)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1745:13:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 54)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)[with
        auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/type_traits:2933:11: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 2933 |     using invoke_result_t = typename invoke_result<_Fn, _Args...>::type;
      |           ^~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:54)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)[with
        auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1748:13: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 1748 |       using _Tag = __detail::__variant::__deduce_visit_result<_Result_type>;
      |             ^~~~
/usr/include/c++/11/variant: In instantiation of 'decltype(auto) std::__check_visitor_result(_Visitor&&, _Variant&&) [with long unsigned int _Idx = 0; _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:54)>; _Variant = const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&]':
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 54)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 54)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)[with
        auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1725:27: error: no matching function for call to ''
__invoke(
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    std::variant_alternative_t<
        0, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>> &)
 1725 |       return std::__invoke(std::forward<_Visitor>(__vis),
      |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1726 |                            std::get<_Idx>(std::forward<_Variant>(__variant)));
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/variant:42,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/invoke.h:90:5: note: candidate: ''
template <class _Callable, class... _Args>
constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type
std::__invoke(_Callable &&, _Args &&...)
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/11/bits/invoke.h:90:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/invoke.h: In substitution of 'template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:54)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1725:27:   required from ''
decltype(auto) std::__check_visitor_result(_Visitor &&, _Variant &&)
    [with long unsigned int _Idx = 0;
     _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 54)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &
]
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 54)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 54)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)[with
        auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/bits/invoke.h:90:5: error: no type named ''
type ' in ' struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator*<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:54)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:113:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator*(auto : 49)[with
        auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1753:53:   in 'constexpr' expansion of ''
std::__check_visitor_results<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator*
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 54)>,
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &,
    0, 1, 2, 3, 4>((std::make_index_sequence<5>(),
                    std::make_index_sequence<5>()))
/usr/include/c++/11/variant:1752:26: error: ''
constexpr' call flows off the end of the functio
 1752 |           constexpr bool __visit_rettypes_match =
      |                          ^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1758:29: error: non-constant condition for static assertion
 1758 |               static_assert(__visit_rettypes_match,
      |                             ^~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'constexpr WeakFactor<ArithmaticParameterTypes>::ThisType WeakFactor<ArithmaticParameterTypes>::operator*(auto:49) [with auto:49 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; ArithmaticParameterTypes = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}; WeakFactor<ArithmaticParameterTypes>::ThisType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/root/workdir/Source/Main.cpp:319:47:   required from ''
<lambda(auto:77, auto:78, auto:79)> [with auto:77 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:78 = ctpg::term_value<char>; auto:79 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 5;
     F = <lambda(auto : 77, auto : 78, auto : 79)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:113:94: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(<brace - enclosed initializer list>)
  113 |         return ThisType{ std::visit( [ & ]( auto value ) { return value * other; }, factor ) };
      |                                                                                              ^
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>::ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
void ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
/root/workdir/Source/Main.cpp: In instantiation of 'WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:55)> [with auto:55 = ExpressionNode<OtherNodeType::FactorStem>]':
/usr/include/c++/11/type_traits:2466:26:   required by substitution of ''
template <class _Fn, class... _Args>
static std::__result_of_success<decltype(declval<_Fn>()((declval<_Args>)()...)),
                                std::__invoke_other>
std::__result_of_other_impl::_S_test(
    int)[with _Fn = WeakFactor<
             ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
         <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>>(
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>)::
             <lambda(auto : 55)>;
         _Args = {const ExpressionNode<OtherNodeType::FactorStem> & }]
/usr/include/c++/11/type_traits:2477:55:   required from ''
struct std::__result_of_impl<
    false, false,
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2482:12:   required from ''
struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2921:12:   required from ''
struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2933:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)[with
        auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:116:73: error: no match for ''
operator/ ' (operand types are ' ExpressionNode<
    OtherNodeType::
        FactorStem> ' and ' const WeakFactor<ExpressionNode<OtherNodeType::
                                                                FactorStem>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorMultiply>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorDivide>,
                                             ExpressionNode<
                                                 ExpressionOperator::SumAdd>,
                                             ExpressionNode<ExpressionOperator::
                                                                SumSubtract>>'
  116 |         return ThisType{ std::visit( [ & ]( auto value ) { return value / other; }, factor ) };
      |                                                                   ~~~~~~^~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In substitution of 'template<class _Fn, class ... _Args> using invoke_result_t = typename std::invoke_result::type [with _Fn = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:55)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1745:13:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 55)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)[with
        auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/type_traits:2933:11: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 2933 |     using invoke_result_t = typename invoke_result<_Fn, _Args...>::type;
      |           ^~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:55)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)[with
        auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1748:13: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 1748 |       using _Tag = __detail::__variant::__deduce_visit_result<_Result_type>;
      |             ^~~~
/usr/include/c++/11/variant: In instantiation of 'decltype(auto) std::__check_visitor_result(_Visitor&&, _Variant&&) [with long unsigned int _Idx = 0; _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:55)>; _Variant = const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&]':
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 55)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 55)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)[with
        auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1725:27: error: no matching function for call to ''
__invoke(
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    std::variant_alternative_t<
        0, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>> &)
 1725 |       return std::__invoke(std::forward<_Visitor>(__vis),
      |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1726 |                            std::get<_Idx>(std::forward<_Variant>(__variant)));
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/variant:42,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/invoke.h:90:5: note: candidate: ''
template <class _Callable, class... _Args>
constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type
std::__invoke(_Callable &&, _Args &&...)
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/11/bits/invoke.h:90:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/invoke.h: In substitution of 'template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:55)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1725:27:   required from ''
decltype(auto) std::__check_visitor_result(_Visitor &&, _Variant &&)
    [with long unsigned int _Idx = 0;
     _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 55)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &
]
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 55)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 55)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)[with
        auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/bits/invoke.h:90:5: error: no type named ''
type ' in ' struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator/<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:55)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:116:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator/(auto : 50)[with
        auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1753:53:   in 'constexpr' expansion of ''
std::__check_visitor_results<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator/
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 55)>,
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &,
    0, 1, 2, 3, 4>((std::make_index_sequence<5>(),
                    std::make_index_sequence<5>()))
/usr/include/c++/11/variant:1752:26: error: ''
constexpr' call flows off the end of the functio
 1752 |           constexpr bool __visit_rettypes_match =
      |                          ^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1758:29: error: non-constant condition for static assertion
 1758 |               static_assert(__visit_rettypes_match,
      |                             ^~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'constexpr WeakFactor<ArithmaticParameterTypes>::ThisType WeakFactor<ArithmaticParameterTypes>::operator/(auto:50) [with auto:50 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; ArithmaticParameterTypes = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}; WeakFactor<ArithmaticParameterTypes>::ThisType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/root/workdir/Source/Main.cpp:323:47:   required from ''
<lambda(auto:80, auto:81, auto:82)> [with auto:80 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:81 = ctpg::term_value<char>; auto:82 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 6;
     F = <lambda(auto : 80, auto : 81, auto : 82)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:116:94: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(<brace - enclosed initializer list>)
  116 |         return ThisType{ std::visit( [ & ]( auto value ) { return value / other; }, factor ) };
      |                                                                                              ^
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>::ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
void ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
/root/workdir/Source/Main.cpp: In instantiation of 'WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator+<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:56)> [with auto:56 = ExpressionNode<OtherNodeType::FactorStem>]':
/usr/include/c++/11/type_traits:2466:26:   required by substitution of ''
template <class _Fn, class... _Args>
static std::__result_of_success<decltype(declval<_Fn>()((declval<_Args>)()...)),
                                std::__invoke_other>
std::__result_of_other_impl::_S_test(
    int)[with _Fn = WeakFactor<
             ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
         <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>>(
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>)::
             <lambda(auto : 56)>;
         _Args = {const ExpressionNode<OtherNodeType::FactorStem> & }]
/usr/include/c++/11/type_traits:2477:55:   required from ''
struct std::__result_of_impl<
    false, false,
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2482:12:   required from ''
struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2921:12:   required from ''
struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2933:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/root/workdir/Source/Main.cpp:119:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator+(auto : 51)[with
        auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:119:73: error: no match for ''
operator+ ' (operand types are ' ExpressionNode<
    OtherNodeType::
        FactorStem> ' and ' const WeakFactor<ExpressionNode<OtherNodeType::
                                                                FactorStem>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorMultiply>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorDivide>,
                                             ExpressionNode<
                                                 ExpressionOperator::SumAdd>,
                                             ExpressionNode<ExpressionOperator::
                                                                SumSubtract>>'
  119 |         return ThisType{ std::visit( [ & ]( auto value ) { return value + other; }, factor ) };
      |                                                                   ~~~~~~^~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In substitution of 'template<class _Fn, class ... _Args> using invoke_result_t = typename std::invoke_result::type [with _Fn = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator+<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:56)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1745:13:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 56)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:119:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator+(auto : 51)[with
        auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/type_traits:2933:11: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 2933 |     using invoke_result_t = typename invoke_result<_Fn, _Args...>::type;
      |           ^~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator+<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:56)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:119:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator+(auto : 51)[with
        auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1748:13: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 1748 |       using _Tag = __detail::__variant::__deduce_visit_result<_Result_type>;
      |             ^~~~
/usr/include/c++/11/variant: In instantiation of 'decltype(auto) std::__check_visitor_result(_Visitor&&, _Variant&&) [with long unsigned int _Idx = 0; _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator+<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:56)>; _Variant = const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&]':
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 56)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 56)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:119:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator+(auto : 51)[with
        auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1725:27: error: no matching function for call to ''
__invoke(
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    std::variant_alternative_t<
        0, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>> &)
 1725 |       return std::__invoke(std::forward<_Visitor>(__vis),
      |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1726 |                            std::get<_Idx>(std::forward<_Variant>(__variant)));
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/variant:42,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/invoke.h:90:5: note: candidate: ''
template <class _Callable, class... _Args>
constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type
std::__invoke(_Callable &&, _Args &&...)
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/11/bits/invoke.h:90:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/invoke.h: In substitution of 'template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator+<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:56)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1725:27:   required from ''
decltype(auto) std::__check_visitor_result(_Visitor &&, _Variant &&)
    [with long unsigned int _Idx = 0;
     _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 56)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &
]
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 56)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 56)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:119:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator+(auto : 51)[with
        auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/bits/invoke.h:90:5: error: no type named ''
type ' in ' struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator+<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:56)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:119:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator+(auto : 51)[with
        auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1753:53:   in 'constexpr' expansion of ''
std::__check_visitor_results<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator+
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 56)>,
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &,
    0, 1, 2, 3, 4>((std::make_index_sequence<5>(),
                    std::make_index_sequence<5>()))
/usr/include/c++/11/variant:1752:26: error: ''
constexpr' call flows off the end of the functio
 1752 |           constexpr bool __visit_rettypes_match =
      |                          ^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1758:29: error: non-constant condition for static assertion
 1758 |               static_assert(__visit_rettypes_match,
      |                             ^~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'constexpr WeakFactor<ArithmaticParameterTypes>::ThisType WeakFactor<ArithmaticParameterTypes>::operator+(auto:51) [with auto:51 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; ArithmaticParameterTypes = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}; WeakFactor<ArithmaticParameterTypes>::ThisType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/root/workdir/Source/Main.cpp:328:53:   required from ''
<lambda(auto:84, auto:85, const auto:86&)> [with auto:84 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:85 = ctpg::term_value<char>; auto:86 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 8;
     F = <lambda(auto : 84, auto : 85, const auto : 86 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:119:94: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(<brace - enclosed initializer list>)
  119 |         return ThisType{ std::visit( [ & ]( auto value ) { return value + other; }, factor ) };
      |                                                                                              ^
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>::ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
void ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
/root/workdir/Source/Main.cpp: In instantiation of 'WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator-<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:57)> [with auto:57 = ExpressionNode<OtherNodeType::FactorStem>]':
/usr/include/c++/11/type_traits:2466:26:   required by substitution of ''
template <class _Fn, class... _Args>
static std::__result_of_success<decltype(declval<_Fn>()((declval<_Args>)()...)),
                                std::__invoke_other>
std::__result_of_other_impl::_S_test(
    int)[with _Fn = WeakFactor<
             ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
         <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>>(
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>)::
             <lambda(auto : 57)>;
         _Args = {const ExpressionNode<OtherNodeType::FactorStem> & }]
/usr/include/c++/11/type_traits:2477:55:   required from ''
struct std::__result_of_impl<
    false, false,
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2482:12:   required from ''
struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2921:12:   required from ''
struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
/usr/include/c++/11/type_traits:2933:11:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/root/workdir/Source/Main.cpp:122:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator-(auto : 52)[with
        auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:122:73: error: no match for ''
operator- ' (operand types are ' ExpressionNode<
    OtherNodeType::
        FactorStem> ' and ' const WeakFactor<ExpressionNode<OtherNodeType::
                                                                FactorStem>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorMultiply>,
                                             ExpressionNode<ExpressionOperator::
                                                                FactorDivide>,
                                             ExpressionNode<
                                                 ExpressionOperator::SumAdd>,
                                             ExpressionNode<ExpressionOperator::
                                                                SumSubtract>>'
  122 |         return ThisType{ std::visit( [ & ]( auto value ) { return value - other; }, factor ) };
      |                                                                   ~~~~~~^~~~~~~
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/nested_exception.h:40,
                 from /usr/include/c++/11/exception:148,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/type_traits: In substitution of 'template<class _Fn, class ... _Args> using invoke_result_t = typename std::invoke_result::type [with _Fn = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator-<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:57)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1745:13:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 57)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:122:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator-(auto : 52)[with
        auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/type_traits:2933:11: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 2933 |     using invoke_result_t = typename invoke_result<_Fn, _Args...>::type;
      |           ^~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator-<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:57)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:122:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator-(auto : 52)[with
        auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1748:13: error: no type named ''
type ' in ' struct std::invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
 1748 |       using _Tag = __detail::__variant::__deduce_visit_result<_Result_type>;
      |             ^~~~
/usr/include/c++/11/variant: In instantiation of 'decltype(auto) std::__check_visitor_result(_Visitor&&, _Variant&&) [with long unsigned int _Idx = 0; _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator-<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:57)>; _Variant = const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&]':
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 57)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 57)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:122:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator-(auto : 52)[with
        auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1725:27: error: no matching function for call to ''
__invoke(
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    std::variant_alternative_t<
        0, std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>> &)
 1725 |       return std::__invoke(std::forward<_Visitor>(__vis),
      |              ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1726 |                            std::get<_Idx>(std::forward<_Variant>(__variant)));
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/variant:42,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/invoke.h:90:5: note: candidate: ''
template <class _Callable, class... _Args>
constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type
std::__invoke(_Callable &&, _Args &&...)
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/11/bits/invoke.h:90:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/invoke.h: In substitution of 'template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator-<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:57)>; _Args = {const ExpressionNode<OtherNodeType::FactorStem>&}]':
/usr/include/c++/11/variant:1725:27:   required from ''
decltype(auto) std::__check_visitor_result(_Visitor &&, _Variant &&)
    [with long unsigned int _Idx = 0;
     _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 57)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &
]
/usr/include/c++/11/variant:1732:65:   required from ''
constexpr bool std::__check_visitor_results(std::index_sequence<_Ind...>)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 57)>;
     _Variant =
         const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>> &;
     long unsigned int... _Idxs = {0, 1, 2, 3, 4};
     std::index_sequence<_Ind...> =
         std::integer_sequence<long unsigned int, 0, 1, 2, 3, 4>]
/usr/include/c++/11/variant:1753:53:   required from ''
constexpr decltype(auto) std::visit(_Visitor &&, _Variants &&...)
    [with _Visitor =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
     <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>>>(
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>)::
         <lambda(auto : 57)>;
     _Variants = {const std::variant<
                      ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>> & }]
/root/workdir/Source/Main.cpp:122:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator-(auto : 52)[with
        auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/bits/invoke.h:90:5: error: no type named ''
type ' in ' struct std::__invoke_result<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const ExpressionNode<OtherNodeType::FactorStem> &>
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant: In instantiation of 'constexpr decltype(auto) std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >::operator-<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> > >(WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >)::<lambda(auto:57)>; _Variants = {const std::variant<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >&}]':
/root/workdir/Source/Main.cpp:122:36:   required from ''
constexpr WeakFactor<ArithmaticParameterTypes>::ThisType
    WeakFactor<ArithmaticParameterTypes>::operator-(auto : 52)[with
        auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
        ArithmaticParameterTypes =
            {ExpressionNode<OtherNodeType::FactorStem>,
             ExpressionNode<ExpressionOperator::FactorMultiply>,
             ExpressionNode<ExpressionOperator::FactorDivide>,
             ExpressionNode<ExpressionOperator::SumAdd>,
             ExpressionNode<ExpressionOperator::SumSubtract>};
        WeakFactor<ArithmaticParameterTypes>::ThisType =
            WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>]
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/usr/include/c++/11/variant:1753:53:   in 'constexpr' expansion of ''
std::__check_visitor_results<
    WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
               ExpressionNode<ExpressionOperator::FactorMultiply>,
               ExpressionNode<ExpressionOperator::FactorDivide>,
               ExpressionNode<ExpressionOperator::SumAdd>,
               ExpressionNode<ExpressionOperator::SumSubtract>>::operator-
    <WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>>>(
        WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                   ExpressionNode<ExpressionOperator::FactorMultiply>,
                   ExpressionNode<ExpressionOperator::FactorDivide>,
                   ExpressionNode<ExpressionOperator::SumAdd>,
                   ExpressionNode<ExpressionOperator::SumSubtract>>)::
        <lambda(auto : 57)>,
    const std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>> &,
    0, 1, 2, 3, 4>((std::make_index_sequence<5>(),
                    std::make_index_sequence<5>()))
/usr/include/c++/11/variant:1752:26: error: ''
constexpr' call flows off the end of the functio
 1752 |           constexpr bool __visit_rettypes_match =
      |                          ^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1758:29: error: non-constant condition for static assertion
 1758 |               static_assert(__visit_rettypes_match,
      |                             ^~~~~~~~~~~~~~~~~~~~~~
/root/workdir/Source/Main.cpp: In instantiation of 'constexpr WeakFactor<ArithmaticParameterTypes>::ThisType WeakFactor<ArithmaticParameterTypes>::operator-(auto:52) [with auto:52 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; ArithmaticParameterTypes = {ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract>}; WeakFactor<ArithmaticParameterTypes>::ThisType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]':
/root/workdir/Source/Main.cpp:332:52:   required from ''
<lambda(auto:87, auto:88, const auto:89&)> [with auto:87 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >; auto:88 = ctpg::term_value<char>; auto:89 = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:32:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_Types...>,
                                                std::tuple<_Rest...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                              std::tuple<_Rest...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_Types...>, std::tuple<_Rest...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<
                                  ctpg::nterm<ValueType>, std::tuple<_Types...>,
                                  std::tuple<_Rest...>, std::tuple<Rules...>,
                                  LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     LValueType = WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                             ExpressionNode<ExpressionOperator::FactorMultiply>,
                             ExpressionNode<ExpressionOperator::FactorDivide>,
                             ExpressionNode<ExpressionOperator::SumAdd>,
                             ExpressionNode<ExpressionOperator::SumSubtract>>;
     RValueType =
         {WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>,
          ctpg::term_value<char>,
          WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                     ExpressionNode<ExpressionOperator::FactorMultiply>,
                     ExpressionNode<ExpressionOperator::FactorDivide>,
                     ExpressionNode<ExpressionOperator::SumAdd>,
                     ExpressionNode<ExpressionOperator::SumSubtract>>};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type = std::
         variant<std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                  std::tuple<_Rest...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<ctpg::detail::rule << lambda(auto : 66)>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 67, auto : 68, const auto : 69 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 70, auto : 71, const auto : 72 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term, ctpg::regex_term<natural_number_regex> >,
     ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term >, ctpg::detail::rule << lambda(auto : 76) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 83) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 84, auto : 85, const auto : 86 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >,
     ctpg::detail::rule << lambda(auto : 87, auto : 88, const auto : 89 &) >,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>>,
     ctpg::char_term,
     ctpg::nterm<WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>> >>
]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 9;
     F = <lambda(auto : 87, auto : 88, const auto : 89 &)>;
     L = ctpg::nterm<
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>>;
     R = {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     long unsigned int... I = {0, 1, 2};
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> =
         std::integer_sequence<long unsigned int, 0, 1, 2>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from here
/root/workdir/Source/Main.cpp:122:94: error: no matching function for call to ''
WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
           ExpressionNode<ExpressionOperator::FactorMultiply>,
           ExpressionNode<ExpressionOperator::FactorDivide>,
           ExpressionNode<ExpressionOperator::SumAdd>,
           ExpressionNode<ExpressionOperator::SumSubtract>>::
    WeakFactor(<brace - enclosed initializer list>)
  122 |         return ThisType{ std::visit( [ & ]( auto value ) { return value - other; }, factor ) };
      |                                                                                              ^
/root/workdir/Source/Main.cpp:110:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::ThisType
        &&)[with ArithmaticParameterTypes =
                {ExpressionNode<OtherNodeType::FactorStem>,
                 ExpressionNode<ExpressionOperator::FactorMultiply>,
                 ExpressionNode<ExpressionOperator::FactorDivide>,
                 ExpressionNode<ExpressionOperator::SumAdd>,
                 ExpressionNode<ExpressionOperator::SumSubtract>};
            WeakFactor<ArithmaticParameterTypes>::ThisType =
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>]
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:110:38: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<
    ExpressionNode<OtherNodeType::FactorStem>,
    ExpressionNode<ExpressionOperator::FactorMultiply>,
    ExpressionNode<ExpressionOperator::FactorDivide>,
    ExpressionNode<ExpressionOperator::SumAdd>,
    ExpressionNode<ExpressionOperator::SumSubtract>>::ThisType &&
    ' {aka ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>> &&'
  110 |     constexpr WeakFactor( ThisType&& other ) = default;
      |                           ~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:109:15: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    const ThisType
        &)[with ArithmaticParameterTypes =
               {ExpressionNode<OtherNodeType::FactorStem>,
                ExpressionNode<ExpressionOperator::FactorMultiply>,
                ExpressionNode<ExpressionOperator::FactorDivide>,
                ExpressionNode<ExpressionOperator::SumAdd>,
                ExpressionNode<ExpressionOperator::SumSubtract>};
           WeakFactor<ArithmaticParameterTypes>::ThisType =
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>]
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |               ^~~~~~~~~~
/root/workdir/Source/Main.cpp:109:43: note:   no known conversion for argument 1 from ''
void ' to ' const ThisType &
    ' {aka ' const WeakFactor<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>> &'
  109 |     constexpr WeakFactor( const ThisType& other ) = default;
      |                           ~~~~~~~~~~~~~~~~^~~~~
/root/workdir/Source/Main.cpp:108:24: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor(
    WeakFactor<ArithmaticParameterTypes>::FactorType)
    [with ArithmaticParameterTypes =
         {ExpressionNode<OtherNodeType::FactorStem>,
          ExpressionNode<ExpressionOperator::FactorMultiply>,
          ExpressionNode<ExpressionOperator::FactorDivide>,
          ExpressionNode<ExpressionOperator::SumAdd>,
          ExpressionNode<ExpressionOperator::SumSubtract>};
     WeakFactor<ArithmaticParameterTypes>::FactorType =
         std::variant<ExpressionNode<OtherNodeType::FactorStem>,
                      ExpressionNode<ExpressionOperator::FactorMultiply>,
                      ExpressionNode<ExpressionOperator::FactorDivide>,
                      ExpressionNode<ExpressionOperator::SumAdd>,
                      ExpressionNode<ExpressionOperator::SumSubtract>>]
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                        ^~~~~~~~~~
/root/workdir/Source/Main.cpp:108:47: note:   no known conversion for argument 1 from ''
void ' to ' WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                       ExpressionNode<ExpressionOperator::FactorMultiply>,
                       ExpressionNode<ExpressionOperator::FactorDivide>,
                       ExpressionNode<ExpressionOperator::SumAdd>,
                       ExpressionNode<ExpressionOperator::SumSubtract>>::
    FactorType ' {aka ' std::variant<
        ExpressionNode<OtherNodeType::FactorStem>,
        ExpressionNode<ExpressionOperator::FactorMultiply>,
        ExpressionNode<ExpressionOperator::FactorDivide>,
        ExpressionNode<ExpressionOperator::SumAdd>,
        ExpressionNode<ExpressionOperator::SumSubtract>>'
  108 |     explicit constexpr WeakFactor( FactorType factor ) : factor( factor ) {}
      |                                    ~~~~~~~~~~~^~~~~~
/root/workdir/Source/Main.cpp:107:5: note: candidate: ''
constexpr WeakFactor<ArithmaticParameterTypes>::WeakFactor()
    [with ArithmaticParameterTypes = {
         ExpressionNode<OtherNodeType::FactorStem>,
         ExpressionNode<ExpressionOperator::FactorMultiply>,
         ExpressionNode<ExpressionOperator::FactorDivide>,
         ExpressionNode<ExpressionOperator::SumAdd>,
         ExpressionNode<ExpressionOperator::SumSubtract>}]
  107 |     WeakFactor() = default;
      |     ^~~~~~~~~~
/root/workdir/Source/Main.cpp:107:5: note:   candidate expects 0 arguments, 1 provided
In file included from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/bits/stl_algobase.h: In instantiation of 'static constexpr _OI std::__copy_move<true, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = std::variant<std::nullptr_t, ctpg::no_type, WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >, ctpg::term_value<char>, ctpg::term_value<std::basic_string_view<char, std::char_traits<char> > > >*; _OI = std::variant<std::nullptr_t, ctpg::no_type, WeakFactor<ExpressionNode<OtherNodeType::FactorStem>, ExpressionNode<ExpressionOperator::FactorMultiply>, ExpressionNode<ExpressionOperator::FactorDivide>, ExpressionNode<ExpressionOperator::SumAdd>, ExpressionNode<ExpressionOperator::SumSubtract> >, ctpg::term_value<char>, ctpg::term_value<std::basic_string_view<char, std::char_traits<char> > > >*]':
/usr/include/c++/11/bits/stl_algobase.h:492:12:   required from ''
constexpr _OI std::__copy_move_a2(_II, _II, _OI)
    [with bool _IsMove = true;
     _II = std::variant<
         std::nullptr_t, ctpg::no_type,
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>,
         ctpg::term_value<char>,
         ctpg::term_value<std::basic_string_view<char, std::char_traits<char>>>>
         *;
     _OI = std::variant<
               std::nullptr_t, ctpg::no_type,
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>,
               ctpg::term_value<char>,
               ctpg::term_value<
                   std::basic_string_view<char, std::char_traits<char>>>> *
]
/usr/include/c++/11/bits/stl_algobase.h:522:42:   required from ''
constexpr _OI std::__copy_move_a1(_II, _II, _OI)
    [with bool _IsMove = true;
     _II = std::variant<
         std::nullptr_t, ctpg::no_type,
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>,
         ctpg::term_value<char>,
         ctpg::term_value<std::basic_string_view<char, std::char_traits<char>>>>
         *;
     _OI = std::variant<
               std::nullptr_t, ctpg::no_type,
               WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                          ExpressionNode<ExpressionOperator::FactorMultiply>,
                          ExpressionNode<ExpressionOperator::FactorDivide>,
                          ExpressionNode<ExpressionOperator::SumAdd>,
                          ExpressionNode<ExpressionOperator::SumSubtract>>,
               ctpg::term_value<char>,
               ctpg::term_value<
                   std::basic_string_view<char, std::char_traits<char>>>> *
]
/usr/include/c++/11/bits/stl_algobase.h:530:31:   required from ''
constexpr _OI std::__copy_move_a(_II, _II, _OI)
    [with bool _IsMove = true;
     _II = __gnu_cxx::__normal_iterator<
         std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>> *,
         std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>>>>;
     _OI = __gnu_cxx::__normal_iterator<
         std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>> *,
         std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>>>>]
/usr/include/c++/11/bits/stl_algobase.h:652:38:   required from ''
constexpr _OI std::move(_II, _II, _OI)
    [with _II = __gnu_cxx::__normal_iterator<
         std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>> *,
         std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>>>>;
     _OI = __gnu_cxx::__normal_iterator<
         std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>> *,
         std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>>>>]
/usr/include/c++/11/bits/vector.tcc:190:6:   required from ''
std::vector<_Tp, _Alloc>::iterator
    std::vector<_Tp, _Alloc>::_M_erase(std::vector<_Tp, _Alloc>::iterator,
                                       std::vector<_Tp, _Alloc>::iterator)
        [with _Tp = std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>>;
         _Alloc = std::allocator<std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>>>;
         std::vector<_Tp, _Alloc>::iterator = std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<std::basic_string_view<
                     char, std::char_traits<char>>>>>>::iterator]
/usr/include/c++/11/bits/stl_vector.h:1461:17:   required from ''
std::vector<_Tp, _Alloc>::iterator
    std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator,
                                    std::vector<_Tp, _Alloc>::const_iterator)
        [with _Tp = std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>>;
         _Alloc = std::allocator<std::variant<
             std::nullptr_t, ctpg::no_type,
             WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                        ExpressionNode<ExpressionOperator::FactorMultiply>,
                        ExpressionNode<ExpressionOperator::FactorDivide>,
                        ExpressionNode<ExpressionOperator::SumAdd>,
                        ExpressionNode<ExpressionOperator::SumSubtract>>,
             ctpg::term_value<char>,
             ctpg::term_value<
                 std::basic_string_view<char, std::char_traits<char>>>>>;
         std::vector<_Tp, _Alloc>::iterator = std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<std::basic_string_view<
                     char, std::char_traits<char>>>>>>::iterator;
         std::vector<_Tp, _Alloc>::const_iterator = std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<std::basic_string_view<
                     char, std::char_traits<char>>>>>>::const_iterator]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2557:29:   required from ''
constexpr void ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
                            std::tuple<_Rest...>, std::tuple<Rules...>,
                            LexerUsage>::reduce(ParseState &,
                                                ctpg::size16_t) const
    [with ParseState = ctpg::detail::parse_state<
         std::vector<short unsigned int>,
         std::vector<
             std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>,
             std::allocator<std::variant<
                 std::nullptr_t, ctpg::no_type,
                 WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                            ExpressionNode<ExpressionOperator::FactorMultiply>,
                            ExpressionNode<ExpressionOperator::FactorDivide>,
                            ExpressionNode<ExpressionOperator::SumAdd>,
                            ExpressionNode<ExpressionOperator::SumSubtract>>,
                 ctpg::term_value<char>,
                 ctpg::term_value<
                     std::basic_string_view<char, std::char_traits<char>>>>>>,
         std::basic_ostream<char>,
         __gnu_cxx::__normal_iterator<const char *,
                                      std::__cxx11::basic_string<char>>>;
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::size16_t = short unsigned int]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:1859:23:   required from ''
constexpr std::optional<_Tp>
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::parse(ctpg::parse_options, const Buffer &,
                                ErrorStream &) const
    [with Buffer = ctpg::buffers::string_buffer;
     ErrorStream = std::basic_ostream<char>;
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:1797:21:   required from ''
constexpr std::optional<_Tp>
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_Types...>,
             std::tuple<_Rest...>, std::tuple<Rules...>,
             LexerUsage>::parse(const Buffer &, ErrorStream &) const
    [with Buffer = ctpg::buffers::string_buffer;
     ErrorStream = std::basic_ostream<char>;
     RootValueType =
         WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                    ExpressionNode<ExpressionOperator::FactorMultiply>,
                    ExpressionNode<ExpressionOperator::FactorDivide>,
                    ExpressionNode<ExpressionOperator::SumAdd>,
                    ExpressionNode<ExpressionOperator::SumSubtract>>;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::regex_term<natural_number_regex>,
              ctpg::char_term, ctpg::char_term};
     NTerms =
         {ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>};
     Rules =
         {ctpg::detail::rule << lambda(auto : 66) >,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 67, auto : 68, const auto : 69 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule
                  << lambda(auto : 70, auto : 71, const auto : 72 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::regex_term<natural_number_regex> >,
          ctpg::detail::rule << lambda(auto : 73, auto : 74, auto : 75) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term >,
          ctpg::detail::rule << lambda(auto : 76) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 77, auto : 78, auto : 79) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 80, auto : 81, auto : 82) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule << lambda(auto : 83) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 84, auto : 85, const auto : 86 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> >,
          ctpg::detail::rule
                  << lambda(auto : 87, auto : 88, const auto : 89 &) >
          ,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>>,
          ctpg::char_term,
          ctpg::nterm<
              WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                         ExpressionNode<ExpressionOperator::FactorMultiply>,
                         ExpressionNode<ExpressionOperator::FactorDivide>,
                         ExpressionNode<ExpressionOperator::SumAdd>,
                         ExpressionNode<ExpressionOperator::SumSubtract>>> > };
     LexerUsage = ctpg::use_generated_lexer]
/root/workdir/Source/Main.cpp:343:52:   required from here
/usr/include/c++/11/bits/stl_algobase.h:405:25: error: use of deleted function ''
std::variant<_Types> &std::variant<_Types>::operator=(
    std::variant<_Types>
        &&)[with _Types = {
                std::nullptr_t, ctpg::no_type,
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>,
                ctpg::term_value<char>,
                ctpg::term_value<
                    std::basic_string_view<char, std::char_traits<char>>>}]
  405 |               *__result = std::move(*__first);
      |               ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/variant:1369:16: note: ''
std::variant<_Types> &std::variant<_Types>::operator=(
    std::variant<_Types>
        &&)[with _Types = {
                std::nullptr_t, ctpg::no_type,
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>,
                ctpg::term_value<char>,
                ctpg::term_value<
                    std::basic_string_view<char, std::char_traits<char>>>}]' is implicitly deleted because the default definition would be ill-formed
 1369 |       variant& operator=(variant&&) = default;
      |                ^~~~~~~~
/usr/include/c++/11/variant:1369:16: error: use of deleted function ''
std::_Enable_copy_move<true, false, true, false, _Tag> &
std::_Enable_copy_move<true, false, true, false, _Tag>::operator=(
    std::_Enable_copy_move<true, false, true, false, _Tag>
        &&)[with _Tag = std::variant<
                std::nullptr_t, ctpg::no_type,
                WeakFactor<ExpressionNode<OtherNodeType::FactorStem>,
                           ExpressionNode<ExpressionOperator::FactorMultiply>,
                           ExpressionNode<ExpressionOperator::FactorDivide>,
                           ExpressionNode<ExpressionOperator::SumAdd>,
                           ExpressionNode<ExpressionOperator::SumSubtract>>,
                ctpg::term_value<char>,
                ctpg::term_value<
                    std::basic_string_view<char, std::char_traits<char>>>>]
In file included from /usr/include/c++/11/variant:38,
                 from /root/workdir/Source/Main.cpp:3:
/usr/include/c++/11/bits/enable_special_members.h:248:5: note: declared here
  248 |     operator=(_Enable_copy_move&&) noexcept                         = delete;
      |     ^~~~~~~~
make[2]: *** [CMakeFiles/starter_compiler.dir/build.make:63: CMakeFiles/starter_compiler.dir/Source/Main.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:76: CMakeFiles/starter_compiler.dir/all] Error 2
make: *** [Makefile:84: all] Error 2
