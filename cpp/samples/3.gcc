[ 50%] Building CXX object CMakeFiles/starter_compiler.dir/Source/Main.cpp.o
In file included from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/root/workdir/Include/Warp/Expression.hpp: In instantiation of 'constexpr const ctpg::parser<ctpg::nterm<long unsigned int>, std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term>, std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int> >, std::tuple<ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<char, std::char_traits<char> >), ctpg::nterm<long unsigned int>, ctpg::regex_term<LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(size_t, auto:44, const auto:45&)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::regex_term<LiteralTerm<RegexLiteralTerms::Identifier>::regex> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(size_t, auto:46, const auto:47&)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::regex_term<LiteralTerm<RegexLiteralTerms::Identifier>::regex> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:48, auto:49, auto:50)>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::nterm<long unsigned int>, ctpg::char_term>, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:51)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:52, auto:53, auto:54)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::nterm<long unsigned int> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:55, auto:56, auto:57)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::nterm<long unsigned int> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:58)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:59, auto:60, const auto:61&)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::nterm<long unsigned int> >, ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(auto:62, auto:63, const auto:64&)>, ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>, ctpg::char_term, ctpg::nterm<long unsigned int> > >, ctpg::use_generated_lexer> ConstantExpression<long unsigned int>::factor_parser':
/root/workdir/Include/Warp/Expression.hpp:208:33:   required from ''
struct ConstantExpression<long unsigned int>
/root/workdir/Source/Main.cpp:14:58:   required from here
/root/workdir/Include/Warp/Expression.hpp:208:33:   in 'constexpr' expansion of ''
ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer>(
    ConstantExpression<long unsigned int>::factor,
    ctpg::terms(
        const Terms &...)[with Terms = {ctpg::char_term, ctpg::char_term,
                                        ctpg::char_term, ctpg::char_term,
                                        ctpg::char_term, ctpg::char_term}](
        ConstantExpression<long unsigned int>::minus_term,
        ConstantExpression<long unsigned int>::multiply_term,
        ConstantExpression<long unsigned int>::divide_term,
        ConstantExpression<long unsigned int>::left_parenthesis_term,
        ConstantExpression<long unsigned int>::right_parenthesis_term),
    ctpg::nterms(NTerms...)[with NTerms = {ctpg::nterm<long unsigned int>,
                                           ctpg::nterm<long unsigned int>,
                                           ctpg::nterm<long unsigned int>}](
        ConstantExpression<long unsigned int>::sum,
        ConstantExpression<long unsigned int>::parenthesis_scope),
    ctpg::rules(Rules &&...)
        [with Rules =
             {ctpg::detail::rule<
                  long unsigned int (*)(
                      std::basic_string_view<char, std::char_traits<char>>),
                  ctpg::nterm<long unsigned int>,
                  ctpg::regex_term<
                      LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
              ctpg::detail::rule<
                  ConstantExpression<long unsigned int>::<
                      lambda(size_t, auto : 44, const auto : 45 &)>,
                  ctpg::nterm<long unsigned int>,
                  ctpg::nterm<long unsigned int>, ctpg::char_term,
                  ctpg::regex_term<
                      LiteralTerm<RegexLiteralTerms::Identifier>::regex>>,
              ctpg::detail::rule<
                  ConstantExpression<long unsigned int>::<
                      lambda(size_t, auto : 46, const auto : 47 &)>,
                  ctpg::nterm<long unsigned int>,
                  ctpg::nterm<long unsigned int>, ctpg::char_term,
                  ctpg::regex_term<
                      LiteralTerm<RegexLiteralTerms::Identifier>::regex>>,
              ctpg::detail::rule<
                  ConstantExpression<long unsigned int>::<
                      lambda(auto : 48, auto : 49, auto : 50)>,
                  ctpg::nterm<long unsigned int>, ctpg::char_term,
                  ctpg::nterm<long unsigned int>, ctpg::char_term>,
              ctpg::detail::rule<
                  ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                  ctpg::nterm<long unsigned int>,
                  ctpg::nterm<long unsigned int>>,
              ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                     lambda(auto : 52, auto : 53, auto : 54)>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::char_term,
                                 ctpg::nterm<long unsigned int>>,
              ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                     lambda(auto : 55, auto : 56, auto : 57)>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::char_term,
                                 ctpg::nterm<long unsigned int>>,
              ctpg::detail::rule<
                  ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                  ctpg::nterm<long unsigned int>,
                  ctpg::nterm<long unsigned int>>,
              ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                     auto : 59, auto : 60, const auto : 61 &)>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::char_term,
                                 ctpg::nterm<long unsigned int>>,
              ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                     auto : 62, auto : 63, const auto : 64 &)>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::nterm<long unsigned int>,
                                 ctpg::char_term,
                                 ctpg::nterm<long unsigned int>>}](
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(size_t, auto : 44, const auto : 45 &)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>, ctpg::char_term,
                            ctpg::regex_term<LiteralTerm<
                                RegexLiteralTerms::Identifier>::regex>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(size_t, auto : 44, const auto : 45 &)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(size_t, auto : 46, const auto : 47 &)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>, ctpg::char_term,
                            ctpg::regex_term<LiteralTerm<
                                RegexLiteralTerms::Identifier>::regex>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(size_t, auto : 46, const auto : 47 &)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 48, auto : 49, auto : 50)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::char_term, ctpg::nterm<long unsigned int>,
                            ctpg::char_term}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 48, auto : 49, auto : 50)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 51)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 51)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 52, auto : 53, auto : 54)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>, ctpg::char_term,
                            ctpg::nterm<long unsigned int>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 52, auto : 53, auto : 54)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 55, auto : 56, auto : 57)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>, ctpg::char_term,
                            ctpg::nterm<long unsigned int>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 55, auto : 56, auto : 57)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 58)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 58)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 59, auto : 60, const auto : 61 &)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>, ctpg::char_term,
                            ctpg::nterm<long unsigned int>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 59, auto : 60, const auto : 61 &)>{}),
            ctpg::detail::rule<F, L, R>::operator>=(
                F1 &&)[with F1 = ConstantExpression<long unsigned int>::<
                           lambda(auto : 62, auto : 63, const auto : 64 &)>;
                       F = std::nullptr_t; L = ctpg::nterm<long unsigned int>;
                       R = {ctpg::nterm<long unsigned int>, ctpg::char_term,
                            ctpg::nterm<long unsigned int>}](
                <lambda closure object> ConstantExpression<long unsigned int>::<
                    lambda(auto : 62, auto : 63, const auto : 64 &)>{})))
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:1781:22:   in 'constexpr' expansion of ''
((ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer> *)this)
    -> ctpg::parser<
        ctpg::nterm<long unsigned int>,
        std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
                   ctpg::char_term, ctpg::char_term, ctpg::char_term>,
        std::tuple<ctpg::nterm<long unsigned int>,
                   ctpg::nterm<long unsigned int>,
                   ctpg::nterm<long unsigned int>>,
        std::tuple<
            ctpg::detail::rule<
                long unsigned int (*)(
                    std::basic_string_view<char, std::char_traits<char>>),
                ctpg::nterm<long unsigned int>,
                ctpg::regex_term<
                    LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   size_t, auto : 44, const auto : 45 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::regex_term<LiteralTerm<
                                   RegexLiteralTerms::Identifier>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   size_t, auto : 46, const auto : 47 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::regex_term<LiteralTerm<
                                   RegexLiteralTerms::Identifier>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 48, auto : 49, auto : 50)>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>, ctpg::char_term>,
            ctpg::detail::rule<
                ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 52, auto : 53, auto : 54)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 55, auto : 56, auto : 57)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<
                ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   auto : 59, auto : 60, const auto : 61 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   auto : 62, auto : 63, const auto : 64 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>>,
        ctpg::use_generated_lexer>::analyze_rules<0, 1, 2, 3, 4, 5, 6, 7, 8,
                                                  9>(
        (std::make_index_sequence<10>{}, std::make_index_sequence<10>()), root)
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   in 'constexpr' expansion of ''
((ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer> *)this)
    -> ctpg::parser<
        ctpg::nterm<long unsigned int>,
        std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
                   ctpg::char_term, ctpg::char_term, ctpg::char_term>,
        std::tuple<ctpg::nterm<long unsigned int>,
                   ctpg::nterm<long unsigned int>,
                   ctpg::nterm<long unsigned int>>,
        std::tuple<
            ctpg::detail::rule<
                long unsigned int (*)(
                    std::basic_string_view<char, std::char_traits<char>>),
                ctpg::nterm<long unsigned int>,
                ctpg::regex_term<
                    LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   size_t, auto : 44, const auto : 45 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::regex_term<LiteralTerm<
                                   RegexLiteralTerms::Identifier>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   size_t, auto : 46, const auto : 47 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::regex_term<LiteralTerm<
                                   RegexLiteralTerms::Identifier>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 48, auto : 49, auto : 50)>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>, ctpg::char_term>,
            ctpg::detail::rule<
                ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 52, auto : 53, auto : 54)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 55, auto : 56, auto : 57)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<
                ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   auto : 59, auto : 60, const auto : 61 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   auto : 62, auto : 63, const auto : 64 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>>,
        ctpg::use_generated_lexer>::
        analyze_rule<0, long unsigned int (*)(std::basic_string_view<char>),
                     ctpg::nterm<long unsigned int>,
                     ctpg::regex_term<
                         LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>,
                     0>(
            (*(const ctpg::detail::rule<
                long unsigned int (*)(std::basic_string_view<char>),
                ctpg::nterm<long unsigned int>,
                ctpg::regex_term<
                    LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>
                   *)(&std::get<
                      0,
                      ctpg::detail::rule<
                          long unsigned int (*)(std::basic_string_view<
                                                char, std::char_traits<char>>),
                          ctpg::nterm<long unsigned int>,
                          ctpg::regex_term<LiteralTerm<
                              RegexLiteralTerms::NaturalNumber>::regex>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(size_t, auto : 44, const auto : 45 &)>,
                          ctpg::nterm<long unsigned int>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::regex_term<LiteralTerm<
                              RegexLiteralTerms::Identifier>::regex>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(size_t, auto : 46, const auto : 47 &)>,
                          ctpg::nterm<long unsigned int>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::regex_term<LiteralTerm<
                              RegexLiteralTerms::Identifier>::regex>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(auto : 48, auto : 49, auto : 50)>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::nterm<long unsigned int>, ctpg::char_term>,
                      ctpg::detail::rule<ConstantExpression<long unsigned int>::
                                             <lambda(auto : 51)>,
                                         ctpg::nterm<long unsigned int>,
                                         ctpg::nterm<long unsigned int>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(auto : 52, auto : 53, auto : 54)>,
                          ctpg::nterm<long unsigned int>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::nterm<long unsigned int>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(auto : 55, auto : 56, auto : 57)>,
                          ctpg::nterm<long unsigned int>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::nterm<long unsigned int>>,
                      ctpg::detail::rule<ConstantExpression<long unsigned int>::
                                             <lambda(auto : 58)>,
                                         ctpg::nterm<long unsigned int>,
                                         ctpg::nterm<long unsigned int>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(auto : 59, auto : 60, const auto : 61 &)>,
                          ctpg::nterm<long unsigned int>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::nterm<long unsigned int>>,
                      ctpg::detail::rule<
                          ConstantExpression<long unsigned int>::<
                              lambda(auto : 62, auto : 63, const auto : 64 &)>,
                          ctpg::nterm<long unsigned int>,
                          ctpg::nterm<long unsigned int>, ctpg::char_term,
                          ctpg::nterm<long unsigned int>>>(
                ((ctpg::parser<
                     ctpg::nterm<long unsigned int>,
                     std::tuple<ctpg::char_term, ctpg::char_term,
                                ctpg::char_term, ctpg::char_term,
                                ctpg::char_term, ctpg::char_term>,
                     std::tuple<ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>>,
                     std::tuple<
                         ctpg::detail::rule<
                             long unsigned int (*)(
                                 std::basic_string_view<
                                     char, std::char_traits<char>>),
                             ctpg::nterm<long unsigned int>,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::NaturalNumber>::regex>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(auto : 51)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<
                                 lambda(auto : 58)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
                         ctpg::detail::rule<
                             ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>>,
                     ctpg::use_generated_lexer> *)this)
                    ->ctpg::parser<
                        ctpg::nterm<long unsigned int>,
                        std::tuple<ctpg::char_term, ctpg::char_term,
                                   ctpg::char_term, ctpg::char_term,
                                   ctpg::char_term, ctpg::char_term>,
                        std::tuple<ctpg::nterm<long unsigned int>,
                                   ctpg::nterm<long unsigned int>,
                                   ctpg::nterm<long unsigned int>>,
                        std::tuple<
                            ctpg::detail::rule<
                                long unsigned int (*)(
                                    std::basic_string_view<
                                        char, std::char_traits<char>>),
                                ctpg::nterm<long unsigned int>,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::NaturalNumber>::regex>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<
                                    lambda(auto : 51)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<
                                    lambda(auto : 58)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
                            ctpg::detail::rule<
                                ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>,
                        ctpg::use_generated_lexer>::rule_tuple))),
            (std::make_index_sequence<1>{}, std::make_index_sequence<1>()))
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2118:47:   in 'constexpr' expansion of ''
((ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                               lambda(auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer> *)this)
    -> ctpg::parser<
        ctpg::nterm<long unsigned int>,
        std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
                   ctpg::char_term, ctpg::char_term, ctpg::char_term>,
        std::tuple<ctpg::nterm<long unsigned int>,
                   ctpg::nterm<long unsigned int>,
                   ctpg::nterm<long unsigned int>>,
        std::tuple<
            ctpg::detail::rule<
                long unsigned int (*)(
                    std::basic_string_view<char, std::char_traits<char>>),
                ctpg::nterm<long unsigned int>,
                ctpg::regex_term<
                    LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   size_t, auto : 44, const auto : 45 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::regex_term<LiteralTerm<
                                   RegexLiteralTerms::Identifier>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   size_t, auto : 46, const auto : 47 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::regex_term<LiteralTerm<
                                   RegexLiteralTerms::Identifier>::regex>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 48, auto : 49, auto : 50)>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>, ctpg::char_term>,
            ctpg::detail::rule<
                ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 52, auto : 53, auto : 54)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                   lambda(auto : 55, auto : 56, auto : 57)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<
                ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   auto : 59, auto : 60, const auto : 61 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>,
            ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                   auto : 62, auto : 63, const auto : 64 &)>,
                               ctpg::nterm<long unsigned int>,
                               ctpg::nterm<long unsigned int>, ctpg::char_term,
                               ctpg::nterm<long unsigned int>>>,
        ctpg::use_generated_lexer>::
        make_symbol<ctpg::regex_term<
            LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>(
            (*&std::get<0, ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>(
                (*&(&r)->ctpg::detail::rule<
                    long unsigned int (*)(std::basic_string_view<char>),
                    ctpg::nterm<long unsigned int>,
                    ctpg::regex_term<LiteralTerm<
                        RegexLiteralTerms::NaturalNumber>::regex>>::get_r()))))
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2038:54:   in 'constexpr' expansion of ''
ctpg::utils::find_str<8>(
    ((const 
    ctpg::parser<
         ctpg::nterm<long unsigned int>,
         std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
                    ctpg::char_term, ctpg::char_term, ctpg::char_term>,
         std::tuple<ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>>,
         std::tuple<
             ctpg::detail::rule<
                 long unsigned int (*)(
                     std::basic_string_view<char, std::char_traits<char>>),
                 ctpg::nterm<long unsigned int>,
                 ctpg::regex_term<
                     LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>,
         ctpg::use_generated_lexer> *)this)
        ->ctpg::parser<
            ctpg::nterm<long unsigned int>,
            std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
                       ctpg::char_term, ctpg::char_term, ctpg::char_term>,
            std::tuple<ctpg::nterm<long unsigned int>,
                       ctpg::nterm<long unsigned int>,
                       ctpg::nterm<long unsigned int>>,
            std::tuple<
                ctpg::detail::rule<
                    long unsigned int (*)(
                        std::basic_string_view<char, std::char_traits<char>>),
                    ctpg::nterm<long unsigned int>,
                    ctpg::regex_term<
                        LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<
                        lambda(size_t, auto : 44, const auto : 45 &)>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>, ctpg::char_term,
                    ctpg::regex_term<
                        LiteralTerm<RegexLiteralTerms::Identifier>::regex>>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<
                        lambda(size_t, auto : 46, const auto : 47 &)>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>, ctpg::char_term,
                    ctpg::regex_term<
                        LiteralTerm<RegexLiteralTerms::Identifier>::regex>>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<
                        lambda(auto : 48, auto : 49, auto : 50)>,
                    ctpg::nterm<long unsigned int>, ctpg::char_term,
                    ctpg::nterm<long unsigned int>, ctpg::char_term>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>>,
                ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                       lambda(auto : 52, auto : 53, auto : 54)>,
                                   ctpg::nterm<long unsigned int>,
                                   ctpg::nterm<long unsigned int>,
                                   ctpg::char_term,
                                   ctpg::nterm<long unsigned int>>,
                ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                       lambda(auto : 55, auto : 56, auto : 57)>,
                                   ctpg::nterm<long unsigned int>,
                                   ctpg::nterm<long unsigned int>,
                                   ctpg::char_term,
                                   ctpg::nterm<long unsigned int>>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<
                        lambda(auto : 59, auto : 60, const auto : 61 &)>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>, ctpg::char_term,
                    ctpg::nterm<long unsigned int>>,
                ctpg::detail::rule<
                    ConstantExpression<long unsigned int>::<
                        lambda(auto : 62, auto : 63, const auto : 64 &)>,
                    ctpg::nterm<long unsigned int>,
                    ctpg::nterm<long unsigned int>, ctpg::char_term,
                    ctpg::nterm<long unsigned int>>>,
            ctpg::use_generated_lexer>::term_ids,
    (&t)->ctpg::regex_term<
        LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>::get_id())
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:460:13: error: expression ''
<throw-expression> is not a constant expressio
  460 |             throw std::runtime_error("string not found");
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant: In instantiation of 'constexpr _Tp&& std::get(std::variant<_Types ...>&&) [with _Tp = ctpg::term_value<std::basic_string_view<char> >; _Types = {std::nullptr_t, ctpg::no_type, long unsigned int, ctpg::term_value<char>}]':
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:53:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_UTypes...>,
                                                std::tuple<_Tail...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                              std::tuple<_Tail...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<ctpg::nterm<ValueType>,
                                           std::tuple<_UTypes...>,
                                           std::tuple<_Tail...>,
                                           std::tuple<Rules...>,
                                           LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType = long unsigned int;
     Terms =
         {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term,
          ctpg::char_term,
          ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<
             ctpg::detail::rule<
                 long unsigned int (*)(
                     std::basic_string_view<char, std::char_traits<char>>),
                 ctpg::nterm<long unsigned int>,
                 ctpg::regex_term<
                     LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
             std::tuple<_Tail...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     L = ctpg::nterm<long unsigned int>;
     R = {ctpg::regex_term<
         LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from ''
constexpr const ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer>
    ConstantExpression<long unsigned int>::factor_parser
/root/workdir/Include/Warp/Expression.hpp:208:33:   required from ''
struct ConstantExpression<long unsigned int>
/root/workdir/Source/Main.cpp:14:58:   required from here
/usr/include/c++/11/variant:1100:42: error: static assertion failed: T must occur exactly once in alternatives
 1100 |       static_assert(__detail::__variant::__exactly_once<_Tp, _Types...>,
      |                     ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:1100:42: note: ''
std::__detail::__variant::__exactly_once<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>' evaluates to fals
/usr/include/c++/11/variant: In instantiation of 'struct std::variant_alternative<1, std::variant<ctpg::term_value<char> > >':
/usr/include/c++/11/variant:103:12:   recursively required from ''
struct std::variant_alternative<
    3, std::variant<ctpg::no_type, long unsigned int, ctpg::term_value<char>>>
/usr/include/c++/11/variant:103:12:   required from ''
struct std::variant_alternative<
    4, std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                    ctpg::term_value<char>>>
/usr/include/c++/11/variant:111:11:   required by substitution of ''
template <long unsigned int _Np, class _Variant>
using variant_alternative_t = typename std::variant_alternative::type
    [with long unsigned int _Np = 4;
     _Variant = std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                             ctpg::term_value<char>>]
/usr/include/c++/11/variant:1697:5:   required by substitution of ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &&
std::get(const std::variant<_Types...>
             &&)[with long unsigned int _Np = 4;
                 _Types = {std::nullptr_t, ctpg::no_type, long unsigned int,
                           ctpg::term_value<char>}]
/usr/include/c++/11/variant:1103:73:   required from ''
constexpr _Tp &&
std::get(std::variant<_Types...>
             &&)[with _Tp = ctpg::term_value<std::basic_string_view<char>>;
                 _Types = {std::nullptr_t, ctpg::no_type, long unsigned int,
                           ctpg::term_value<char>}]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:53:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_UTypes...>,
                                                std::tuple<_Tail...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                              std::tuple<_Tail...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<ctpg::nterm<ValueType>,
                                           std::tuple<_UTypes...>,
                                           std::tuple<_Tail...>,
                                           std::tuple<Rules...>,
                                           LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType = long unsigned int;
     Terms =
         {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term,
          ctpg::char_term,
          ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<
             ctpg::detail::rule<
                 long unsigned int (*)(
                     std::basic_string_view<char, std::char_traits<char>>),
                 ctpg::nterm<long unsigned int>,
                 ctpg::regex_term<
                     LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
             std::tuple<_Tail...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     L = ctpg::nterm<long unsigned int>;
     R = {ctpg::regex_term<
         LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from ''
constexpr const ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer>
    ConstantExpression<long unsigned int>::factor_parser
/root/workdir/Include/Warp/Expression.hpp:208:33:   required from ''
struct ConstantExpression<long unsigned int>
/root/workdir/Source/Main.cpp:14:58:   required from here
/usr/include/c++/11/variant:103:12: error: invalid use of incomplete type ''
struct std::variant_alternative<0, std::variant<>>
  103 |     struct variant_alternative<_Np, variant<_First, _Rest...>>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant:100:12: note: declaration of ''
struct std::variant_alternative<0, std::variant<>>
  100 |     struct variant_alternative;
      |            ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant: In instantiation of 'constexpr _Tp&& std::get(std::variant<_Types ...>&&) [with _Tp = ctpg::term_value<std::basic_string_view<char> >; _Types = {std::nullptr_t, ctpg::no_type, long unsigned int, ctpg::term_value<char>}]':
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:53:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_UTypes...>,
                                                std::tuple<_Tail...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                              std::tuple<_Tail...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<ctpg::nterm<ValueType>,
                                           std::tuple<_UTypes...>,
                                           std::tuple<_Tail...>,
                                           std::tuple<Rules...>,
                                           LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType = long unsigned int;
     Terms =
         {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term,
          ctpg::char_term,
          ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<
             ctpg::detail::rule<
                 long unsigned int (*)(
                     std::basic_string_view<char, std::char_traits<char>>),
                 ctpg::nterm<long unsigned int>,
                 ctpg::regex_term<
                     LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
             std::tuple<_Tail...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     L = ctpg::nterm<long unsigned int>;
     R = {ctpg::regex_term<
         LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from ''
constexpr const ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer>
    ConstantExpression<long unsigned int>::factor_parser
/root/workdir/Include/Warp/Expression.hpp:208:33:   required from ''
struct ConstantExpression<long unsigned int>
/root/workdir/Source/Main.cpp:14:58:   required from here
/usr/include/c++/11/variant:1103:73: error: no matching function for call to ''
get<std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char, std::char_traits<char>>>,
    std::nullptr_t, ctpg::no_type, long unsigned int, ctpg::term_value<char>>>(
    std::remove_reference<
        std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                     ctpg::term_value<char>> &>::type)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:223:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr typename std::tuple_element<_Int, std::pair<_OIter1, _OIter2>>::type &
std::get(std::pair<_OIter1, _OIter2> &)
  223 |     get(pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:223:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' std::pair<_OIter1,
                                                                       _OIter2>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:228:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr
    typename std::tuple_element<_Int, std::pair<_OIter1, _OIter2>>::type &&
    std::get(std::pair<_OIter1, _OIter2> &&)
  228 |     get(pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:228:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' std::pair<_OIter1,
                                                                       _OIter2>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:233:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr const typename std::tuple_element<_Int,
                                            std::pair<_OIter1, _OIter2>>::type &
std::get(const std::pair<_OIter1, _OIter2> &)
  233 |     get(const pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:233:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::
        pair<_OIter1, _OIter2>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:238:5: note: candidate: ''
template <long unsigned int _Int, class _Tp1, class _Tp2>
constexpr const typename std::tuple_element<
    _Int, std::pair<_OIter1, _OIter2>>::type &&
std::get(const std::pair<_OIter1, _OIter2> &&)
  238 |     get(const pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:238:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::
        pair<_OIter1, _OIter2>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:247:5: note: candidate: ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_T1, _T2> &)
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:247:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_T1, _T2> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:252:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_T1, _T2> &)
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:252:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_T1, _T2> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:257:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_T1, _T2> &&)
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:257:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_T1, _T2> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:262:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_T1, _T2> &&)
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:262:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_T1, _T2> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:267:5: note: candidate: ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_Up, _Tp> &)
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:267:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up> constexpr _Tp &std::get(std::pair<_Up, _Tp> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:272:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_Up, _Tp> &)
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:272:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &std::get(const std::pair<_Up, _Tp> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:277:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_Up, _Tp> &&)
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:277:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr _Tp &&std::get(std::pair<_Up, _Tp> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:38,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/utility:282:5: note: candidate: ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_Up, _Tp> &&)
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class _Up>
constexpr const _Tp &&std::get(const std::pair<_Up, _Tp> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/tuple:39,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/array:361:5: note: candidate: ''
template <long unsigned int _Int, class _Tp, long unsigned int _Nm>
constexpr _Tp &std::get(std::array<_Tp, _Nm> &)
  361 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:361:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' std::array<_Tp,
                                                                        _Nm>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:39,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/array:369:5: note: candidate: ''
template <long unsigned int _Int, class _Tp, long unsigned int _Nm>
constexpr _Tp &&std::get(std::array<_Tp, _Nm> &&)
  369 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:369:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' std::array<_Tp,
                                                                        _Nm>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:39,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/array:377:5: note: candidate: ''
template <long unsigned int _Int, class _Tp, long unsigned int _Nm>
constexpr const _Tp &std::get(const std::array<_Tp, _Nm> &)
  377 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:377:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::
        array<_Tp, _Nm>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/tuple:39,
                 from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/array:385:5: note: candidate: ''
template <long unsigned int _Int, class _Tp, long unsigned int _Nm>
constexpr const _Tp &&std::get(const std::array<_Tp, _Nm> &&)
  385 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:385:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::
        array<_Tp, _Nm>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1377:5: note: candidate: ''
template <long unsigned int __i, class... _Elements>
constexpr std::__tuple_element_t<__i, std::tuple<_UTypes...>> &
std::get(std::tuple<_UTypes...> &)
 1377 |     get(tuple<_Elements...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1377:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<
        std::nullptr_t, ctpg::no_type, long unsigned int,
        ctpg::term_value<char>> '} is not derived from ' std::tuple<_UTypes...>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1383:5: note: candidate: ''
template <long unsigned int __i, class... _Elements>
constexpr std::__tuple_element_t<__i, std::tuple<_UTypes...>> &
std::get(const std::tuple<_UTypes...> &)
 1383 |     get(const tuple<_Elements...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1383:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::
        tuple<_UTypes...>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1389:5: note: candidate: ''
template <long unsigned int __i, class... _Elements>
constexpr std::__tuple_element_t<__i, std::tuple<_UTypes...>> &&
std::get(std::tuple<_UTypes...> &&)
 1389 |     get(tuple<_Elements...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1389:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<
        std::nullptr_t, ctpg::no_type, long unsigned int,
        ctpg::term_value<char>> '} is not derived from ' std::tuple<_UTypes...>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1398:5: note: candidate: ''
template <long unsigned int __i, class... _Elements>
constexpr std::__tuple_element_t<__i, std::tuple<_UTypes...>> &&
std::get(const std::tuple<_UTypes...> &&)
 1398 |     get(const tuple<_Elements...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1398:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::
        tuple<_UTypes...>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1421:5: note: candidate: ''
template <class _Tp, class... _Types>
constexpr _Tp &std::get(std::tuple<_UTypes...> &)
 1421 |     get(tuple<_Types...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1421:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr _Tp &std::get(std::tuple<_UTypes...> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1427:5: note: candidate: ''
template <class _Tp, class... _Types>
constexpr _Tp &&std::get(std::tuple<_UTypes...> &&)
 1427 |     get(tuple<_Types...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1427:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr _Tp &&std::get(std::tuple<_UTypes...> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1433:5: note: candidate: ''
template <class _Tp, class... _Types>
constexpr const _Tp &std::get(const std::tuple<_UTypes...> &)
 1433 |     get(const tuple<_Types...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1433:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr const _Tp &std::get(const std::tuple<_UTypes...> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/functional:54,
                 from /root/workdir/Include/Warp/Expression.hpp:2,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/tuple:1440:5: note: candidate: ''
template <class _Tp, class... _Types>
constexpr const _Tp &&std::get(const std::tuple<_UTypes...> &&)
 1440 |     get(const tuple<_Types...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1440:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr const _Tp &&std::get(const std::tuple<_UTypes...> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
In file included from /usr/include/c++/11/bits/ranges_algo.h:36,
                 from /usr/include/c++/11/algorithm:64,
                 from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:9,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/bits/ranges_util.h:376:5: note: candidate: ''
template <long unsigned int _Num, class _It, class _Sent,
          std::ranges::subrange_kind _Kind>
    requires _Num <
    2 constexpr auto
    std::ranges::get(std::ranges::subrange<_It, _Sent, _Kind> &&)
  376 |     get(subrange<_It, _Sent, _Kind>&& __r)
      |     ^~~
/usr/include/c++/11/bits/ranges_util.h:376:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' std::ranges::
        subrange<_It, _Sent, _Kind>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
In file included from /usr/include/c++/11/bits/ranges_algo.h:36,
                 from /usr/include/c++/11/algorithm:64,
                 from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:9,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/bits/ranges_util.h:365:5: note: candidate: ''
template <long unsigned int _Num, class _It, class _Sent,
          std::ranges::subrange_kind _Kind>
    requires _Num <
    2 constexpr auto
    std::ranges::get(const std::ranges::subrange<_It, _Sent, _Kind> &)
  365 |     get(const subrange<_It, _Sent, _Kind>& __r)
      |     ^~~
/usr/include/c++/11/bits/ranges_util.h:365:5: note:   template argument deduction/substitution failed:
In file included from /root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:12,
                 from /root/workdir/Include/Warp/Expression.hpp:10,
                 from /root/workdir/Source/Main.cpp:1:
/usr/include/c++/11/variant:1103:73: note:   ''
std::remove_reference<
    std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                 ctpg::term_value<char>> &>::type ' {aka ' std::
    variant<std::nullptr_t, ctpg::no_type, long unsigned int,
            ctpg::term_value<char>> '} is not derived from ' const std::ranges::
        subrange<_It, _Sent, _Kind>
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1664:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &
std::get(std::variant<_Types...> &)
 1664 |     get(variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1664:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant: In substitution of 'template<long unsigned int _Np, class _Variant> using variant_alternative_t = typename std::variant_alternative::type [with long unsigned int _Np = 4; _Variant = std::variant<std::nullptr_t, ctpg::no_type, long unsigned int, ctpg::term_value<char> >]':
/usr/include/c++/11/variant:1664:5:   required by substitution of ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &
std::get(std::variant<_Types...> &)[with long unsigned int _Np = 4;
                                    _Types = {std::nullptr_t, ctpg::no_type,
                                              long unsigned int,
                                              ctpg::term_value<char>}]
/usr/include/c++/11/variant:1103:73:   required from ''
constexpr _Tp &&
std::get(std::variant<_Types...>
             &&)[with _Tp = ctpg::term_value<std::basic_string_view<char>>;
                 _Types = {std::nullptr_t, ctpg::no_type, long unsigned int,
                           ctpg::term_value<char>}]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:53:   required from ''
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_UTypes...>,
                                                std::tuple<_Tail...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                              std::tuple<_Tail...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<ctpg::nterm<ValueType>,
                                           std::tuple<_UTypes...>,
                                           std::tuple<_Tail...>,
                                           std::tuple<Rules...>,
                                           LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType = long unsigned int;
     Terms =
         {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term,
          ctpg::char_term,
          ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<
             ctpg::detail::rule<
                 long unsigned int (*)(
                     std::basic_string_view<char, std::char_traits<char>>),
                 ctpg::nterm<long unsigned int>,
                 ctpg::regex_term<
                     LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
             std::tuple<_Tail...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     L = ctpg::nterm<long unsigned int>;
     R = {ctpg::regex_term<
         LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from ''
constexpr const ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer>
    ConstantExpression<long unsigned int>::factor_parser
/root/workdir/Include/Warp/Expression.hpp:208:33:   required from ''
struct ConstantExpression<long unsigned int>
/root/workdir/Source/Main.cpp:14:58:   required from here
/usr/include/c++/11/variant:111:11: error: no type named ''
type ' in ' struct std::variant_alternative<
    4, std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                    ctpg::term_value<char>>>
  111 |     using variant_alternative_t =
      |           ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/variant: In instantiation of 'constexpr _Tp&& std::get(std::variant<_Types ...>&&) [with _Tp = ctpg::term_value<std::basic_string_view<char> >; _Types = {std::nullptr_t, ctpg::no_type, long unsigned int, ctpg::term_value<char>}]':
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2503:53:   required from '
static constexpr LValueType ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value_impl(const F &,
                                   ctpg::parser<ctpg::nterm<ValueType>,
                                                std::tuple<_UTypes...>,
                                                std::tuple<_Tail...>,
                                                std::tuple<Rules...>,
                                                LexerUsage>::value_variant_type
                                       *,
                                   std::index_sequence<I...>)
    [with F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2510:60:   required from ''
static constexpr ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                              std::tuple<_Tail...>, std::tuple<Rules...>,
                              LexerUsage>::value_variant_type
ctpg::parser<
    ctpg::nterm<ValueType>, std::tuple<_UTypes...>, std::tuple<_Tail...>,
    std::tuple<Rules...>,
    LexerUsage>::reduce_value(const rule_tuple_type &,
                              ctpg::parser<ctpg::nterm<ValueType>,
                                           std::tuple<_UTypes...>,
                                           std::tuple<_Tail...>,
                                           std::tuple<Rules...>,
                                           LexerUsage>::value_variant_type *)
    [with long unsigned int RuleIdx = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     LValueType = long unsigned int;
     RValueType = {ctpg::term_value<
         std::basic_string_view<char, std::char_traits<char>>>};
     RootValueType = long unsigned int;
     Terms =
         {ctpg::char_term, ctpg::char_term, ctpg::char_term, ctpg::char_term,
          ctpg::char_term,
          ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>,
                  LexerUsage>::value_variant_type =
         std::variant<std::nullptr_t, ctpg::no_type, long unsigned int,
                      ctpg::term_value<char>>;
     ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
                  std::tuple<_Tail...>, std::tuple<Rules...>, LexerUsage>::
         rule_tuple_type = std::tuple<
             ctpg::detail::rule<
                 long unsigned int (*)(
                     std::basic_string_view<char, std::char_traits<char>>),
                 ctpg::nterm<long unsigned int>,
                 ctpg::regex_term<
                     LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 44, const auto : 45 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    size_t, auto : 46, const auto : 47 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::regex_term<LiteralTerm<
                                    RegexLiteralTerms::Identifier>::regex>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 48, auto : 49, auto : 50)>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>,
                                ctpg::char_term>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 52, auto : 53, auto : 54)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                    lambda(auto : 55, auto : 56, auto : 57)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<
                 ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
                 ctpg::nterm<long unsigned int>,
                 ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 59, auto : 60, const auto : 61 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>,
             ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                    auto : 62, auto : 63, const auto : 64 &)>,
                                ctpg::nterm<long unsigned int>,
                                ctpg::nterm<long unsigned int>, ctpg::char_term,
                                ctpg::nterm<long unsigned int>>>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2126:33:   required from ''
constexpr void
ctpg::parser<ctpg::nterm<ValueType>, std::tuple<_UTypes...>,
             std::tuple<_Tail...>, std::tuple<Rules...>,
             LexerUsage>::analyze_rule(const ctpg::detail::rule<F, L, R...> &,
                                       std::index_sequence<I...>)
    [with long unsigned int Nr = 0;
     F = long unsigned int(*)(std::basic_string_view<char>);
     L = ctpg::nterm<long unsigned int>;
     R = {ctpg::regex_term<
         LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>};
     long unsigned int... I = {0}; RootValueType = long unsigned int;
     Terms = {ctpg::char_term, ctpg::char_term, ctpg::char_term,
              ctpg::char_term, ctpg::char_term, ctpg::char_term};
     NTerms = {ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>};
     Rules =
         {ctpg::detail::rule<
              long unsigned int (*)(
                  std::basic_string_view<char, std::char_traits<char>>),
              ctpg::nterm<long unsigned int>,
              ctpg::regex_term<
                  LiteralTerm<RegexLiteralTerms::NaturalNumber>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 44, const auto : 45 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(size_t, auto : 46, const auto : 47 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::regex_term<LiteralTerm<
                                 RegexLiteralTerms::Identifier>::regex>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 48, auto : 49, auto : 50)>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>, ctpg::char_term>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 52, auto : 53, auto : 54)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<
                                 lambda(auto : 55, auto : 56, auto : 57)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<
              ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
              ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 59, auto : 60, const auto : 61 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>,
          ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                                 auto : 62, auto : 63, const auto : 64 &)>,
                             ctpg::nterm<long unsigned int>,
                             ctpg::nterm<long unsigned int>, ctpg::char_term,
                             ctpg::nterm<long unsigned int>>};
     LexerUsage = ctpg::use_generated_lexer;
     std::index_sequence<I...> = std::integer_sequence<long unsigned int, 0>]
/root/.conan/data/ctpg/1.3.6/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include/ctpg.hpp:2062:10:   required from ''
constexpr const ctpg::parser<
    ctpg::nterm<long unsigned int>,
    std::tuple<ctpg::char_term, ctpg::char_term, ctpg::char_term,
               ctpg::char_term, ctpg::char_term, ctpg::char_term>,
    std::tuple<ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>,
               ctpg::nterm<long unsigned int>>,
    std::tuple<
        ctpg::detail::rule<long unsigned int (*)(std::basic_string_view<
                                                 char, std::char_traits<char>>),
                           ctpg::nterm<long unsigned int>,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::NaturalNumber>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 44, const auto : 45 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               size_t, auto : 46, const auto : 47 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::regex_term<LiteralTerm<
                               RegexLiteralTerms::Identifier>::regex>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 48, auto : 49, auto : 50)>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>, ctpg::char_term>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 51)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 52, auto : 53, auto : 54)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 55, auto : 56, auto : 57)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<
            ConstantExpression<long unsigned int>::<lambda(auto : 58)>,
            ctpg::nterm<long unsigned int>, ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 59, auto : 60, const auto : 61 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>,
        ctpg::detail::rule<ConstantExpression<long unsigned int>::<lambda(
                               auto : 62, auto : 63, const auto : 64 &)>,
                           ctpg::nterm<long unsigned int>,
                           ctpg::nterm<long unsigned int>, ctpg::char_term,
                           ctpg::nterm<long unsigned int>>>,
    ctpg::use_generated_lexer>
    ConstantExpression<long unsigned int>::factor_parser
/root/workdir/Include/Warp/Expression.hpp:208:33:   required from ''
struct ConstantExpression<long unsigned int>
/root/workdir/Source/Main.cpp:14:58:   required from here
/usr/include/c++/11/variant:1675:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &&
std::get(std::variant<_Types...> &&)
 1675 |     get(variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1675:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1686:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &
std::get(const std::variant<_Types...> &)
 1686 |     get(const variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1686:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1697:5: note: candidate: ''
template <long unsigned int _Np, class... _Types>
constexpr std::variant_alternative_t<_Np, std::variant<_Types...>> &&
std::get(const std::variant<_Types...> &&)
 1697 |     get(const variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1697:5: note:   substitution of deduced template arguments resulted in errors seen above
/usr/include/c++/11/variant:1089:20: note: candidate: ''
template <class _Tp, class... _Types>
constexpr _Tp &std::get(std::variant<_Types...> &)
 1089 |     constexpr _Tp& get(variant<_Types...>& __v)
      |                    ^~~
/usr/include/c++/11/variant:1089:20: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr _Tp &std::get(std::variant<_Types...> &)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
/usr/include/c++/11/variant:1098:21: note: candidate: ''
template <class _Tp, class... _Types>
constexpr _Tp &&std::get(std::variant<_Types...> &&)
 1098 |     constexpr _Tp&& get(variant<_Types...>&& __v)
      |                     ^~~
/usr/include/c++/11/variant:1098:21: note:   template argument deduction/substitution failed:
/usr/include/c++/11/variant:1103:73: error: type/value mismatch at argument 1 in template parameter list for ''
template <class _Tp, class... _Types>
constexpr _Tp &&std::get(std::variant<_Types...> &&)
 1103 |       return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
 1104 |         std::move(__v));
      |         ~~~~~~~~~~~~~~~                                                  
/usr/include/c++/11/variant:1103:73: note:   expected a type, got ''
std::__detail::__variant::__index_of_v<
    ctpg::term_value<std::basic_string_view<char>>, std::nullptr_t,
    ctpg::no_type, long unsigned int, ctpg::term_value<char>>
make[2]: *** [CMakeFiles/starter_compiler.dir/build.make:63: CMakeFiles/starter_compiler.dir/Source/Main.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:76: CMakeFiles/starter_compiler.dir/all] Error 2
make: *** [Makefile:84: all] Error 2
